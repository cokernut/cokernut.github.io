<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cokernut</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cokernut.top/"/>
  <updated>2016-11-29T03:38:04.279Z</updated>
  <id>http://cokernut.top/</id>
  
  <author>
    <name>Cokernut</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Hexo+GitHub Pages搭建静态博客</title>
    <link href="http://cokernut.top/2016/11/29/Note/%E4%BD%BF%E7%94%A8Hexo+GitHub%20Pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>http://cokernut.top/2016/11/29/Note/使用Hexo+GitHub Pages搭建静态博客/</id>
    <published>2016-11-28T16:00:00.000Z</published>
    <updated>2016-11-29T03:38:04.279Z</updated>
    
    <content type="html"><![CDATA[<p>使用Hexo+GitHub Pages搭建静态博客<br><a id="more"></a></p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>一个基于Node.js的快速，简单和强大的博客框架。</p>
<h2 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h2><p>GitHub Pages可以被认为是用户编写的、托管在github上的静态网页。</p>
<h2 id="建立GitHub-Pages项目"><a href="#建立GitHub-Pages项目" class="headerlink" title="建立GitHub Pages项目"></a>建立GitHub Pages项目</h2><p>在GitHub上建立一个名称为：username.github.io的项目，username一定要填写自己的GitHub的名称，之后可以把生成的静态网页提交到这个项目上，<br>然后可以通过 <a href="https://username.github.io" target="_blank" rel="external">https://username.github.io</a> 这个地址访问到我们生成的静态网页。</p>
<h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><ul>
<li>Hexo是基于Node.js的，所以首先要安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li><p>使用命令安装hexo:  </p>
<blockquote>
<p>npm install hexo-cli -g  </p>
</blockquote>
<p>注意：使用-g表示全局安装，没有加-g表示本地安装（当前目录安装）。</p>
</li>
</ul>
<p>查看版本：</p>
<blockquote>
<p>hexo version  或者 hexo v  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">hexo: 3.2.2</div><div class="line">hexo-cli: 1.0.2</div><div class="line">os: Windows_NT 10.0.14393 win32 x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 6.9.1</div><div class="line">v8: 5.1.281.84</div><div class="line">uv: 1.9.1</div><div class="line">zlib: 1.2.8</div><div class="line">ares: 1.10.1-DEV</div><div class="line">icu: 57.1</div><div class="line">modules: 48</div><div class="line">openssl: 1.0.2j</div></pre></td></tr></table></figure>
<p>查看帮助：</p>
<blockquote>
<p>hexo help  或者 hexo h  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">Usage: hexo &lt;command&gt;</div><div class="line"></div><div class="line">Commands:</div><div class="line">  clean     Removed generated files and cache. #删除生成的文件和缓存。</div><div class="line">  config    Get or set configurations.</div><div class="line">  deploy    Deploy your website. #部署网站，就是提交到项目中</div><div class="line">  generate  Generate static files. #生成静态文件</div><div class="line">  help      Get help on a command.   #查看帮助信息</div><div class="line">  init      Create a new Hexo folder. #创建一个hexo项目，不指定文件夹名，则在当前目录创建，否则在后面指定的文件夹创建</div><div class="line">  list      List the information of the site</div><div class="line">  migrate   Migrate your site from other system to Hexo.</div><div class="line">  new       Create a new post. #新建文件，可以指定模板，否则使用默认模板</div><div class="line">  publish   Moves a draft post from _drafts to _posts folder.</div><div class="line">  render    Render files with renderer plugins.</div><div class="line">  server    Start the server. #开启服务器</div><div class="line">  version   Display version information. #查看版本信息</div><div class="line"></div><div class="line">Global Options:</div><div class="line">  --config  Specify config file instead of using _config.yml #指定配置文件，代替默认的_config.yml</div><div class="line">  --cwd     Specify the CWD #自定义当前工作目录</div><div class="line">  --debug   Display all verbose messages in the terminal #调试模式，输出所有日志信息</div><div class="line">  --draft   Display draft posts #草稿模式</div><div class="line">  --safe    Disable all plugins and scripts #安全模式，禁用所有的插件和脚本</div><div class="line">  --silent  Hide output on console #无日志输出模式</div></pre></td></tr></table></figure>
<h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><blockquote>
<p>hexo init [项目文件夹]  </p>
</blockquote>
<p>注意：项目文件夹是可选的，不指定文件夹名，则在当前目录创建项目，否则在后面指定的文件夹创建项目  </p>
<p>新建项目之后切换到项目的根目录使用：</p>
<blockquote>
<p>npm install </p>
</blockquote>
<p>这条命令来为项目安装依赖包，具体安装内容可以在package.json文件里找到。  </p>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt; scaffolds ：模板文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件。Hexo 有三种默认布局： post 、 page 和 draft ，它们分别对应不同的路径。新建文件的默认布局是 post ，可以在配置文件中更改布局。用 draft 布局生成的文件会被保存到 source/_drafts 文件夹。</div><div class="line">&gt; source ：资源文件夹是存放用户资源的地方。</div><div class="line">&gt; &gt; source/_post ：文件箱。（低版本的hexo还会存在一个 _draft ，这是草稿箱）除 _posts 文件夹之外，开头命名为 _ (下划线)的文件/ 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去</div><div class="line">&gt; themes ：主题 文件夹。Hexo 会根据主题来生成静态页面。</div><div class="line">&gt; &gt; themes/landscape ：默认的皮肤文件夹</div><div class="line">&gt; &gt; &gt; themes/landscape/_config.yml :当前主题配置文件</div><div class="line">&gt; _config.yml ：全局的配置文件，每次更改要重启服务。</div></pre></td></tr></table></figure>
<p>之后使用：  </p>
<blockquote>
<p>hexo server 或者 hexo s  </p>
</blockquote>
<p>来开启本地服务器进行预览。<br>我们可以过浏览器打开地址， <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 或者 <a href="http://0.0.0.0:4000" target="_blank" rel="external">http://0.0.0.0:4000</a> 来预览我们的项目。</p>
<h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><blockquote>
<p>_config.yml  </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: https://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site 站点配置</div><div class="line">title: Cokernut #网站标题</div><div class="line">subtitle: #网站副标题</div><div class="line">description: #网站描述</div><div class="line">author: Cokernut #作者</div><div class="line">language: zh-CN #网站使用的语言</div><div class="line">timezone: Asia/Shanghai #网站时区</div><div class="line"></div><div class="line"># URL 配置</div><div class="line">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</div><div class="line">url: http://cokernut.top #网址，搜索时会在搜索引擎中显示</div><div class="line">root: / #网站根目录</div><div class="line">permalink: :year/:month/:day/:title/ #永久链接格式</div><div class="line">permalink_defaults: #永久链接中各部分的默认值</div><div class="line"></div><div class="line"># Directory 目录配置</div><div class="line">source_dir: source #资源文件夹，这个文件夹用来存放内容</div><div class="line">public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件</div><div class="line">tag_dir: tags #标签文件夹</div><div class="line">archive_dir: archives #归档文件夹</div><div class="line">category_dir: categories #分类文件夹</div><div class="line">code_dir: downloads/code #Include code 文件夹</div><div class="line">i18n_dir: :lang #国际化文件夹</div><div class="line">skip_render: #跳过指定文件的渲染，您可使用 glob 来配置路径</div><div class="line"></div><div class="line"># Writing 写作配置</div><div class="line">new_post_name: :title.md # 新文章的文件名称</div><div class="line">default_layout: post #默认布局</div><div class="line">titlecase: false #把标题变成titlecase</div><div class="line">external_link: true #在新标签页打开外部链接</div><div class="line">filename_case: 0 #把文件名称转换为 (1) 小写或 (2) 大写</div><div class="line">render_drafts: false #显示草稿</div><div class="line">post_asset_folder: false #是否启动资源文件夹</div><div class="line">relative_link: false #把链接改为与根目录的相对位址</div><div class="line">future: true</div><div class="line">highlight: #代码块的设置</div><div class="line">  enable: true</div><div class="line">  line_number: true</div><div class="line">  auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag 分类 &amp; 标签</div><div class="line">default_category: uncategorized #默认分类</div><div class="line">category_map: #分类别名</div><div class="line">tag_map: #标签别名</div><div class="line"></div><div class="line"># Date / Time format 日期/时间</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination 分页</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions 扩展</div><div class="line">## Plugins: https://hexo.io/plugins/ #插件</div><div class="line">## Themes: https://hexo.io/themes/ #主题</div><div class="line">theme: landscape-plus #当前主题名称</div><div class="line"></div><div class="line"># Deployment #部署</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy: #github配置</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/cokernut/cokernut.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>主题相关配置可以在主题下面的_config.yml里进行配置，不同的主题有些配置不同。</p>
<h2 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h2><blockquote>
<p>hexo new [模板] &lt;标题&gt; 或者 hexo n [模板] &lt;标题&gt;   </p>
</blockquote>
<p>注意：其中[模板]是可选参数，默认值为 post，如果没有设置[模板]的话，默认使用 _config.yml<br>中的 default_layout 参数代替。如果标题包含空格的话，需用引号括起来。  </p>
<p>Hexo提供的模板在 scaffolds 目录下，也可以在此目录下自建模板文件或者修改模板文件。新建的文件会在<br>source/_post 目录下。</p>
<p>发表的文章会全部显示，如果文章很长，就只要显示文章的摘要就行了。写法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title:</div><div class="line">date:</div><div class="line">tag： # tags 和 categories 有多个，则用数组形式。[Java, Android]</div><div class="line">categories：</div><div class="line">...</div><div class="line">---</div><div class="line"></div><div class="line">摘要</div><div class="line"></div><div class="line">&lt;!--more--&gt;</div><div class="line"></div><div class="line">全文</div></pre></td></tr></table></figure></p>
<p>这时主页就能够看到只显示标题和摘要了，同时会有Read More的链接按钮，<br>这个链接按钮的文字可以更改，在主题的配置文件(themes/主题文件夹/_config.yml)中，<br>找到 Content:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Content</div><div class="line">excerpt_link: Read More #可以更改成想要显示的文字</div><div class="line">fancybox: true</div></pre></td></tr></table></figure></p>
<h2 id="页面的生成"><a href="#页面的生成" class="headerlink" title="页面的生成"></a>页面的生成</h2><p>在项目部署之前要通过命令把所有的文章都做静态化处理，生成对应的html, javascript, css，<br>使得所有的文章都是由静态文件组成的。</p>
<blockquote>
<p>hexo generate 或者 hexo g  </p>
</blockquote>
<p>运行这个命令之后在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。 </p>
<h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><p>生成静态文件之后，如果要发布到github，还需要配置 deploy 指令。<br>在全局的配置文件(_config.yml)中找到 deploy ：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment #部署</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy: #github配置</div><div class="line">  type: git #类型GitHub的类型属于git</div><div class="line">  repo: https://github.com/cokernut/cokernut.github.io.git #GitHub Pages的git地址</div><div class="line">  branch: master #提交到的分支</div></pre></td></tr></table></figure></p>
<p>之后安装hexo-deployer-git插件：</p>
<blockquote>
<p>npm install hexo-deployer-git -s  </p>
</blockquote>
<p>然后使用命令：</p>
<blockquote>
<p>hexo deploy 或者 hexo d</p>
</blockquote>
<p>把项目部署到GitHub Pages上，提交的文件是在username.github.io项目上。<br>之后你可以访问<a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a> 查看效果。</p>
<h2 id="绑定自己的域名（可选）"><a href="#绑定自己的域名（可选）" class="headerlink" title="绑定自己的域名（可选）"></a>绑定自己的域名（可选）</h2><ol>
<li>购买一个自己的域名</li>
<li>在username.github.io项目的根目录建立一个CNAME文件，在文件中填写上自己购买的域名，比如：username.net，不需要添加http或者是www等前缀。</li>
<li>使用ping命令得到username.github.io的IP地址并记录。</li>
<li>在域名的DNS配置上添加记录，两种方式选一种：  </li>
</ol>
<p>添加A记录：  </p>
<table>
<thead>
<tr>
<th>记录类型</th>
<th>主机记录</th>
<th>记录值</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>@</td>
<td>IP地址</td>
</tr>
<tr>
<td>A</td>
<td>www</td>
<td>IP地址</td>
</tr>
</tbody>
</table>
<p>或者添加CNAME记录：  </p>
<table>
<thead>
<tr>
<th>记录类型</th>
<th>主机记录</th>
<th>记录值  </th>
</tr>
</thead>
<tbody>
<tr>
<td>CNAME</td>
<td>@</td>
<td>username.github.io  </td>
</tr>
<tr>
<td>CNAME</td>
<td>www</td>
<td>username.github.io  </td>
</tr>
</tbody>
</table>
<p>两种记录类型相同主机记录只能添加一种不然会提示冲突，并且不能添加。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Hexo+GitHub Pages搭建静态博客&lt;br&gt;
    
    </summary>
    
      <category term="GitHub" scheme="http://cokernut.top/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="http://cokernut.top/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>React Native嵌入Android原生项目中</title>
    <link href="http://cokernut.top/2016/11/25/Android/React%20Native%E5%B5%8C%E5%85%A5Android%E5%8E%9F%E7%94%9F%E9%A1%B9%E7%9B%AE%E4%B8%AD/"/>
    <id>http://cokernut.top/2016/11/25/Android/React Native嵌入Android原生项目中/</id>
    <published>2016-11-24T16:00:00.000Z</published>
    <updated>2016-11-29T06:03:28.672Z</updated>
    
    <content type="html"><![CDATA[<p>React Native嵌入Android原生项目中<br><a id="more"></a></p>
<h2 id="开发环境准备"><a href="#开发环境准备" class="headerlink" title="开发环境准备"></a>开发环境准备</h2><p>首先你要搭建好React Native for Android开发环境， 没有搭建好的可以参考：<a href="http://cokernut.top/2016/11/23/Android/React%20Native%20for%20Android%20Windows%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">React Native for Android Windows环境搭建</a>  </p>
<h2 id="用Android-Studio新建Android原生项目"><a href="#用Android-Studio新建Android原生项目" class="headerlink" title="用Android Studio新建Android原生项目"></a>用Android Studio新建Android原生项目</h2><p>我创建了一个名叫ReactNativeDemo的原生项目。</p>
<h2 id="把React-Native集成到原生项目当中"><a href="#把React-Native集成到原生项目当中" class="headerlink" title="把React Native集成到原生项目当中"></a>把React Native集成到原生项目当中</h2><h3 id="利用Windows命令行在项目根目录-ReactNativeDemo文件夹-下执行下面三行命令："><a href="#利用Windows命令行在项目根目录-ReactNativeDemo文件夹-下执行下面三行命令：" class="headerlink" title="利用Windows命令行在项目根目录(ReactNativeDemo文件夹)下执行下面三行命令："></a>利用Windows命令行在项目根目录(ReactNativeDemo文件夹)下执行下面三行命令：</h3><blockquote>
<p>npm init<br>npm install –save react react-native<br>curl -o .flowconfig <a href="https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig" target="_blank" rel="external">https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig</a>  </p>
</blockquote>
<p>这将在项目根目录(ReactNativeDemo文件夹)创建node_modules文件夹(模块)，并添加React Native依赖。</p>
<h2 id="针对上面三条命令的解释"><a href="#针对上面三条命令的解释" class="headerlink" title="针对上面三条命令的解释"></a>针对上面三条命令的解释</h2><h3 id="npm-init"><a href="#npm-init" class="headerlink" title="npm init"></a>npm init</h3><p><img src="/images/Android/React_Native_to_Native/1.png" alt="图片" title="图片"><br><img src="/images/Android/React_Native_to_Native/2.png" alt="图片" title="图片"><br>注意:<br>name的填写由图可知填默认的是不行的，它的要求是不能有大写字母并且不能以数字开头；<br>entry point的填写入口文件名称，默认的是index.js，我们建立的入口文件是index.android.js，所以填写index.android.js。只要填写的名称与自己定义的入口文件名称一致就行。<br>其他的项根据自己需求填写即可。  </p>
<p>这个步骤会在项目的根目录产生一个名称为package.json的文件，我们还需要修改我们的package.json文件：<br>在”scripts”节点下添加”start”: “node node_modules/react-native/local-cli/cli.js start”。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">"scripts": &#123;</div><div class="line">   "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",</div><div class="line">   "start": "node node_modules/react-native/local-cli/cli.js start"</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>其中的test节点是自动生成的，我们可以把它删除，最后我的package.json为：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"reactnativedemo"</span>,</div><div class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</div><div class="line">  <span class="attr">"main"</span>: <span class="string">"index.android.js"</span>,</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"start"</span>: <span class="string">"node node_modules/react-native/local-cli/cli.js start"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</div><div class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</div><div class="line">  <span class="attr">"dependencies"</span>: &#123;</div><div class="line">    <span class="attr">"react"</span>: <span class="string">"^15.4.1"</span>,</div><div class="line">    <span class="attr">"react-native"</span>: <span class="string">"^0.38.0"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="npm-install-–save-react-react-native"><a href="#npm-install-–save-react-react-native" class="headerlink" title="npm install –save react react-native"></a>npm install –save react react-native</h3><p><img src="/images/Android/React_Native_to_Native/3.png" alt="图片" title="图片"><br><img src="/images/Android/React_Native_to_Native/4.png" alt="图片" title="图片"><br><img src="/images/Android/React_Native_to_Native/5.png" alt="图片" title="图片">  </p>
<h3 id="curl-o-flowconfig-https-raw-githubusercontent-com-facebook-react-native-master-flowconfig"><a href="#curl-o-flowconfig-https-raw-githubusercontent-com-facebook-react-native-master-flowconfig" class="headerlink" title="curl -o .flowconfig https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig"></a>curl -o .flowconfig <a href="https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig" target="_blank" rel="external">https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig</a></h3><p>curl是利用URL语法在命令行方式下工作的开源文件传输工具。它被广泛应用在Unix、多种Linux发行版中，并且有DOS和Win32、Win64下的移植版本。<br>所以可知上面这句话的意思是在对应网址下下载.flowconfig文件。<br>在windows下我们要使用curl命令会提示:curl不是内部和外部命令，也不是可执行文件或批处理命令。。。<br>我们在windows下要使用curl命令比较麻烦。解决方法就是我们用下载工具从<a href="https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig上把" target="_blank" rel="external">https://raw.githubusercontent.com/facebook/react-native/master/.flowconfig上把</a><br>.flowconfig下载下来复制到项目根目录，或者是在项目根目录下新建一个.flowconfig文件用浏览器访问这个网址其中的内容把其中的内容复制到文件当中。</p>
<h2 id="建立index-android-js文件"><a href="#建立index-android-js文件" class="headerlink" title="建立index.android.js文件"></a>建立index.android.js文件</h2><p>在项目的根目录建立index.android.js文件并把下面的代码复制进去：  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> &#123;</div><div class="line">  AppRegistry,</div><div class="line">  StyleSheet,</div><div class="line">  Text,</div><div class="line">  View</div><div class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;styles.container&#125;</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;styles.hello&#125;</span>&gt;</span>Welcome!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">View</span>&gt;</span></div><div class="line">    )</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> styles = StyleSheet.create(&#123;</div><div class="line">  <span class="attr">container</span>: &#123;</div><div class="line">    <span class="attr">flex</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">justifyContent</span>: <span class="string">'center'</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">hello</span>: &#123;</div><div class="line">    <span class="attr">fontSize</span>: <span class="number">20</span>,</div><div class="line">    <span class="attr">textAlign</span>: <span class="string">'center'</span>,</div><div class="line">    <span class="attr">margin</span>: <span class="number">10</span>,</div><div class="line">  &#125;,</div><div class="line">&#125;);</div><div class="line"></div><div class="line">AppRegistry.registerComponent(<span class="string">'HelloWorld'</span>, () =&gt; HelloWorld);</div></pre></td></tr></table></figure>
<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>在项目的根目录的build.gradle中加入：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">allprojects</span> &#123;</div><div class="line">    <span class="keyword">repositories</span> &#123;</div><div class="line">        jcenter()</div><div class="line">        maven &#123;</div><div class="line">            <span class="comment">//添加react native依赖，url路径根据实际的来写，本文的如下：</span></div><div class="line">            url <span class="string">"$rootDir/node_modules/react-native/android"</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注意：Android项目默认的依赖包的源为jcenter()，其中并不包含最新版的 React Native（它只到0.20.1）。<br>新版的React Native只在npm里发布，所以你需要增加一下依赖包的源。在编译完后，检查项目External Libraries的<br>react-native版本如果为0.20.1，则说明maven的依赖源没有添加成功。这时候应该是maven的路径出问题了，你要检查<br>路径是否正确，正确的结果为：<br><img src="/images/Android/React_Native_to_Native/6.png" alt="图片" title="图片">  </p>
<p>在项目的模块(app)中的build.gradle文件中添加：<br>文件头添加（可选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply from: &quot;$rootDir/node_modules/react-native/react.gradle&quot;</div></pre></td></tr></table></figure></p>
<p>无法编译通过的时候可以尝试添加上面这句。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    ...</div><div class="line">    compile &quot;com.facebook.react:react-native:+&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果你想总是使用一个特定的版本，你需要把+替换成你已经下载的React Native的版本号，<br>这个版本号应该与package.json中的react-native的版本号(“react-native”: “^0.38.0”)一致的。如本例中的0.38.0：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    ...</div><div class="line">    compile &quot;com.facebook.react:react-native:0.38.0&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="添加原生Activity文件："><a href="#添加原生Activity文件：" class="headerlink" title="添加原生Activity文件："></a>添加原生Activity文件：</h2><blockquote>
<p>MyReactActivity  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.app.Activity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.view.KeyEvent;</div><div class="line"><span class="keyword">import</span> com.facebook.react.BuildConfig;</div><div class="line"><span class="keyword">import</span> com.facebook.react.ReactInstanceManager;</div><div class="line"><span class="keyword">import</span> com.facebook.react.ReactRootView;</div><div class="line"><span class="keyword">import</span> com.facebook.react.common.LifecycleState;</div><div class="line"><span class="keyword">import</span> com.facebook.react.modules.core.DefaultHardwareBackBtnHandler;</div><div class="line"><span class="keyword">import</span> com.facebook.react.shell.MainReactPackage;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReactActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">DefaultHardwareBackBtnHandler</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ReactRootView mReactRootView;</div><div class="line">    <span class="keyword">private</span> ReactInstanceManager mReactInstanceManager;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line"></div><div class="line">        mReactRootView = <span class="keyword">new</span> ReactRootView(<span class="keyword">this</span>);</div><div class="line">        mReactInstanceManager = ReactInstanceManager.builder()</div><div class="line">                .setApplication(getApplication())</div><div class="line">                .setBundleAssetName(<span class="string">"index.android.bundle"</span>)</div><div class="line">                .setJSMainModuleName(<span class="string">"index.android"</span>) <span class="comment">//对应index.android.js</span></div><div class="line">                .addPackage(<span class="keyword">new</span> MainReactPackage())</div><div class="line">                .setUseDeveloperSupport(BuildConfig.DEBUG)</div><div class="line">                .setInitialLifecycleState(LifecycleState.RESUMED)</div><div class="line">                .build();</div><div class="line">        <span class="comment">//这里的HelloWorld对应index.android.js中AppRegistry.registerComponent('HelloWorld', () =&gt; HelloWorld)的HelloWorld</span></div><div class="line">        mReactRootView.startReactApplication(mReactInstanceManager, <span class="string">"HelloWorld"</span>, <span class="keyword">null</span>);</div><div class="line">        setContentView(mReactRootView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invokeDefaultOnBackPressed</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onBackPressed();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onPause();</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mReactInstanceManager != <span class="keyword">null</span>) &#123;</div><div class="line">            mReactInstanceManager.onHostPause(<span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onResume();</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mReactInstanceManager != <span class="keyword">null</span>) &#123;</div><div class="line">            mReactInstanceManager.onHostResume(<span class="keyword">this</span>, <span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mReactInstanceManager != <span class="keyword">null</span>) &#123;</div><div class="line">            mReactInstanceManager.onHostDestroy(<span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mReactInstanceManager != <span class="keyword">null</span>) &#123;</div><div class="line">            mReactInstanceManager.onBackPressed();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">super</span>.onBackPressed();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyUp</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class="line">        <span class="comment">//当我们点击菜单的时候打开发者菜单，一个弹窗（此处需要悬浮窗权限才能显示）</span></div><div class="line">        <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_MENU &amp;&amp; mReactInstanceManager != <span class="keyword">null</span>) &#123;</div><div class="line">            mReactInstanceManager.showDevOptionsDialog();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onKeyUp(keyCode, event);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="AndroidManifest-xml相关"><a href="#AndroidManifest-xml相关" class="headerlink" title="AndroidManifest.xml相关"></a>AndroidManifest.xml相关</h2><blockquote>
<p>AndroidManifest.xml  </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">package</span>=<span class="string">"top.cokernut.reactnativedemo"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SYSTEM_ALERT_WINDOW"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">application</span></span></div><div class="line">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">".MyReactActivity"</span></div><div class="line">            <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">            <span class="attr">android:theme</span>=<span class="string">"@style/Theme.AppCompat.Light.NoActionBar"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">"com.facebook.react.devsupport.DevSettingsActivity"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure>
<p>网络权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</div></pre></td></tr></table></figure></p>
<p>悬浮窗权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>有悬浮窗权限才能显示：<br><img src="/images/Android/React_Native_to_Native/7.png" alt="图片" title="图片">    </p>
<p>注册MyReactActivity：注意主题为Theme.AppCompat.Light.NoActionBar<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;activity</div><div class="line">    android:name=&quot;.MyReactActivity&quot;</div><div class="line">    android:label=&quot;@string/app_name&quot;</div><div class="line">    android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot;&gt;</div><div class="line">&lt;/activity&gt;</div></pre></td></tr></table></figure></p>
<p>开发设置界面：<br><img src="/images/Android/React_Native_to_Native/8.png" alt="图片" title="图片">     </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;activity android:name=&quot;com.facebook.react.devsupport.DevSettingsActivity&quot; /&gt;</div></pre></td></tr></table></figure>
<h2 id="运行应用"><a href="#运行应用" class="headerlink" title="运行应用"></a>运行应用</h2><h3 id="启动开发服务器"><a href="#启动开发服务器" class="headerlink" title="启动开发服务器"></a>启动开发服务器</h3><p>在项目的根目录下运行：</p>
<blockquote>
<p>npm start  </p>
</blockquote>
<p><img src="/images/Android/React_Native_to_Native/9.png" alt="图片" title="图片">     </p>
<p>这个命令运行的是我们package.json中配置的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&quot;scripts&quot;: &#123;</div><div class="line">    &quot;start&quot;: &quot;node node_modules/react-native/local-cli/cli.js start&quot;</div><div class="line">  &#125;,</div></pre></td></tr></table></figure></p>
<p>可以用浏览器访问<a href="http://localhost:8081/index.android.bundle?platform=android" target="_blank" rel="external">http://localhost:8081/index.android.bundle?platform=android</a> 看看是否可以看到打包后的脚本。<br>第一次访问通常需要十几秒，并且在命令行可以看到进度条。</p>
<h3 id="构建与运行你的程序"><a href="#构建与运行你的程序" class="headerlink" title="构建与运行你的程序"></a>构建与运行你的程序</h3><p>两种方法：  </p>
<ol>
<li>在命令行中项目目录下运行gradlew installDebug  </li>
<li>直接利用Android Studio像平常一样运行项目  </li>
</ol>
<p>如果你使用的是Android studio为你构建而不是Gradle构建(gradlew installDebug)，你要确保你在安装应用之前运行了npm start。<br>以防止它们之间出现冲突。<br>效果：<br><img src="/images/Android/React_Native_to_Native/15.png" alt="图片" title="图片"><br><img src="/images/Android/React_Native_to_Native/16.png" alt="图片" title="图片">  </p>
<h3 id="在Android-Studio中打包成独立安装程序"><a href="#在Android-Studio中打包成独立安装程序" class="headerlink" title="在Android Studio中打包成独立安装程序"></a>在Android Studio中打包成独立安装程序</h3><p>你可以使用Android Studio来创建你的App的发布版本！像以前创建原生应用程序的发布版本一样简单，只是有一个额外步骤：<br>在你打包你的发布版本之前要创建一个bundle文件，这个bundle文件会创建在项目的assets目录中，并且这个文件会包含在你的apk包中，<br>在你的项目根目录中运行：  </p>
<blockquote>
<p>react-native bundle –platform android –dev false –entry-file index.android.js –bundle-output app/src/main/assets/index.android.bundle –assets-dest app/src/main/res/  </p>
</blockquote>
<p>app/src/main根据实际情况改为自己项目中的目录，参考assets文件夹的目录。<br><img src="/images/Android/React_Native_to_Native/11.png" alt="图片" title="图片"><br>结果为：<br><img src="/images/Android/React_Native_to_Native/10.png" alt="图片" title="图片"><br>如果报错： </p>
<blockquote>
<p>ENOENT: no such file or directory  </p>
</blockquote>
<p>你需要在你的app模块中建立assets文件夹和index.android.bundle。</p>
<p>现在你可以对你的应用程序进行打包发布了。</p>
<h2 id="问题与解决方案"><a href="#问题与解决方案" class="headerlink" title="问题与解决方案"></a>问题与解决方案</h2><h3 id="打不开开发者菜单"><a href="#打不开开发者菜单" class="headerlink" title="打不开开发者菜单"></a>打不开开发者菜单</h3><p>查看AndroidManifest.xml文件中是否加入了悬浮窗权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>并且你要在手机上开启你要调试的应用的悬浮窗权限，不同的手机开启方式不同，可以自行搜索开启方法。</p>
<h3 id="错误-“-data-data-package-name-lib-main-libgnustl-shared-so”-is-32-bit-instead-of-64-bit"><a href="#错误-“-data-data-package-name-lib-main-libgnustl-shared-so”-is-32-bit-instead-of-64-bit" class="headerlink" title="错误 “/data/data/package-name/lib-main/libgnustl_shared.so” is 32-bit instead of 64-bit"></a>错误 “/data/data/package-name/lib-main/libgnustl_shared.so” is 32-bit instead of 64-bit</h3><p>取消掉所有的64位的.so文件，全部加载32位的.so文件。  </p>
<ol>
<li><p>在项目的根目录的build.gradle中加入：   </p>
<blockquote>
<p>android.useDeprecatedNdk=true.  </p>
</blockquote>
</li>
<li><p>在项目的模块(app)中的build.gradle文件中添加:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    ...</div><div class="line">    defaultConfig &#123;</div><div class="line">        ...</div><div class="line">        ndk &#123;</div><div class="line">            abiFilters "armeabi-v7a", "x86"</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        packagingOptions &#123;</div><div class="line">            exclude "lib/arm64-v8a/librealm-jni.so"</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="错误：Could-not-get-BatchedBridge-make-sure-your-bundle-is-packaged-correctly"><a href="#错误：Could-not-get-BatchedBridge-make-sure-your-bundle-is-packaged-correctly" class="headerlink" title="错误：Could not get BatchedBridge,make sure your bundle is packaged correctly"></a>错误：Could not get BatchedBridge,make sure your bundle is packaged correctly</h3><p>可能是build模式选择了release模式，引发的这个错误，你可以检查一下是否是debug模式，如果不是改为debug再试一下。<br>因为正式版需要你创建 React Native bundle文件(index.android.bundle)存放到本地 asserts 目录,<br>参考上文（在Android Studio中打包成独立安装程序），运行生成bundle文件命令之后再点击Android Studio的run按钮运行程序即可正常显示。</p>
<p>注意：这个方法有一个弊端，因为正式版，所以修改了页面js文件之后，不能像单独的React Native项目一样可以不重新运行项目只需要点击Reload<br>即可立刻看到修改的js页面的效果，想重新看到效果需要再运行一遍生成bundle文件命令然后点击run按钮重新运行才能看到结果。这个方法可以不开启<br>开发服务器也能看到js页面效果，因为js页面是通过bundle文件来运行的，就像正式的apk一样可以独立运行。<br>debug模式release模式React Native JS代码调试的区别:<br>debug模式: 修改完js代码打开开发者菜单点击Reload就可以看到更新后的效果，或者是开启Live Reload(点击Enable Live Reload)<br>这样我们修改了js文件只要保存就会自动Reload。<br>release模式: 修改完js代码需要重新生成index.android.bundle 文件，点击run之后才能看到效果。因为正式版发布后是无法<br>依赖本地服务器去更新index.android.bundle，需要把index.android.bundle打包到apk中才能运行。</p>
<h4 id="其他方案："><a href="#其他方案：" class="headerlink" title="其他方案："></a>其他方案：</h4><p>方案1. 修改package.json文件如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">  "scripts": &#123;</div><div class="line">    "start": "node node_modules/react-native/local-cli/cli.js start",</div><div class="line">    "bundle-android": "react-native bundle --platform android --dev false --entry-file index.android.js --bundle-output app/src/main/assets/index.android.bundle --assets-dest app/src/main/res/"</div><div class="line">  &#125;,</div><div class="line">```  </div><div class="line">这个方法我的没成功，仅供参考。    </div><div class="line"></div><div class="line">方案2.在AndroidManifest.xml文件中加入如下权限：</div></pre></td></tr></table></figure></p>
<p><android:uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE">  </android:uses-permission></p>
<p><android:uses-permission android:name="android.permission.READ_PHONE_STATE">  </android:uses-permission></p>
<p><android:uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"><br>```<br>然后开启开发者服务器(npm start)，之后run项目看看是否有结果。<br>这个方法我的没成功，仅供参考。</android:uses-permission></p>
<h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><p><img src="/images/Android/React_Native_to_Native/12.png" alt="图片" title="图片">   </p>
<h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><p>把Android Studio自动生成的文件夹androidTest和test删除，并修改项目的模块(app)的build.gradle文件：  </p>
<h4 id="修改前："><a href="#修改前：" class="headerlink" title="修改前："></a>修改前：</h4><p><img src="/images/Android/React_Native_to_Native/13.png" alt="图片" title="图片">  </p>
<h4 id="修改后："><a href="#修改后：" class="headerlink" title="修改后："></a>修改后：</h4><p><img src="/images/Android/React_Native_to_Native/14.png" alt="图片" title="图片">     </p>
<h3 id="其他问题可以参考React-Native-for-Android-Windows环境搭建"><a href="#其他问题可以参考React-Native-for-Android-Windows环境搭建" class="headerlink" title="其他问题可以参考React Native for Android Windows环境搭建"></a>其他问题可以参考<a href="http://cokernut.top/2016/11/23/Android/React%20Native%20for%20Android%20Windows%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">React Native for Android Windows环境搭建</a></h3><font size="5"><a href="https://github.com/cokernut/ReactNativeToNative" target="_blank" rel="external">源代码</a></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React Native嵌入Android原生项目中&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://cokernut.top/categories/Android/"/>
    
    
      <category term="Android" scheme="http://cokernut.top/tags/Android/"/>
    
      <category term="React Native" scheme="http://cokernut.top/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>React Native for Android Windows环境搭建</title>
    <link href="http://cokernut.top/2016/11/23/Android/React%20Native%20for%20Android%20Windows%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://cokernut.top/2016/11/23/Android/React Native for Android Windows环境搭建/</id>
    <published>2016-11-22T16:00:00.000Z</published>
    <updated>2016-11-28T09:31:40.252Z</updated>
    
    <content type="html"><![CDATA[<p>React Native for Android Windows环境搭建<br><a id="more"></a></p>
<h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><p>从<a href="http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html" target="_blank" rel="external">Java官网</a>下载JDK并安装</p>
<p>设置环境变量;JAVA_HOME环境变量设置为你jdk所在目录，将JDK的bin目录加入系统PATH环境变量</p>
<h2 id="安装Android-SDK"><a href="#安装Android-SDK" class="headerlink" title="安装Android SDK"></a>安装Android SDK</h2><p>安装Android SDK，把ANDROID_HOME环境变量设置为你sdk所在目录，将SDK的platform-tools和tools目录加入系统PATH环境变量<br>这里你可以安装Android Studio, Android Studio包含了运行和测试React Native应用所需的Android SDK和模拟器。React Native目前需要Android Studio2.0或更高版本，<br>Android Studio需要Java Development Kit [JDK] 1.8或更高版本。</p>
<h2 id="安装C-环境"><a href="#安装C-环境" class="headerlink" title="安装C++环境"></a>安装C++环境</h2><p>下载并安装Visual Studio。也可选择Windows SDK、cygwin或mingw等其他C++环境。编译node.js的C++模块时需要用到</p>
<h2 id="安装git客户端"><a href="#安装git客户端" class="headerlink" title="安装git客户端"></a>安装<a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a>客户端</h2><p>init那一步需要用到这个东西  </p>
<h2 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h2><p>从官网下载并安装<a href="https://www.python.org/downloads/" target="_blank" rel="external">python</a> 2.7.x（3.x版本目前不支持）</p>
<h2 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h2><p>请到<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a>下载Windows版本的Node.js<br>我选的是最新版，React Native的要求是4.1以上都可以支持，注意，目前已知Node 7.1版本在windows上无法正常工作，请注意避开这个版本！<br>建议设置npm镜像以加速后面的过程（或使用科学上网工具）</p>
<blockquote>
<p>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> –global<br>npm config set disturl <a href="https://npm.taobao.org/dist" target="_blank" rel="external">https://npm.taobao.org/dist</a> –global  </p>
</blockquote>
<h2 id="安装react-native-cli（react-native命令行工具）"><a href="#安装react-native-cli（react-native命令行工具）" class="headerlink" title="安装react-native-cli（react-native命令行工具）"></a>安装react-native-cli（react-native命令行工具）</h2><p>Windows命令行运行：</p>
<blockquote>
<p>npm install -g react-native-cli   </p>
</blockquote>
<p>注意：有的教程命令是：npm install -g yarn react-native-cli就是多装了一个yarn模块，<br>Yarn是Facebook提供的替代npm的工具，可以加速node模块的下载，它是在我们使用npm命令下载模块的时候<br>会间接调用yarn命令下载，但是国内因为访问不了Facebook(梯子另说)，所以用yarn下载的结果要么是下载不了，<br>要么是比npm还慢。所以你发现init项目的时候很慢或者是进度不知道动，那么你看一下命令行是不是因为有当你用npm的时候<br>下面有说明调用yarn了，还有个版本号。这种情况下我们应该把yarn进行删除，删除方法：默认是在命令行下转到C:\Users\UserName\AppData\Roaming\npm<br>目录下运行:</p>
<blockquote>
<p>npm uninstall yarn  </p>
</blockquote>
<p>这样就可以把yarn模块进行删除，我们使用npm命令时就不会调用yarn了。<br>React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。<br>（进度慢的同学可以尝试使用Vpn或者是其他加速方法-_-）  </p>
<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><p>进入你的工作目录，Windows命令行运行：</p>
<blockquote>
<p>react-native init Project  </p>
</blockquote>
<p>耐心等待。。。。。。此过程有点慢！</p>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>进入项目目录（上面的Project目录）启动React Native Server</p>
<blockquote>
<p>react-native start  </p>
</blockquote>
<p>可以用浏览器访问<a href="http://localhost:8081/index.android.bundle?platform=android看看是否可以看到打包后的脚本。第一次访问通常需要十几秒，并且在packager的命令行可以看到进度条" target="_blank" rel="external">http://localhost:8081/index.android.bundle?platform=android看看是否可以看到打包后的脚本。第一次访问通常需要十几秒，并且在packager的命令行可以看到进度条</a></p>
<h2 id="运行模拟器"><a href="#运行模拟器" class="headerlink" title="运行模拟器"></a>运行模拟器</h2><p>启动Android模拟器或者是使用自己连接电脑  </p>
<h2 id="安卓运行"><a href="#安卓运行" class="headerlink" title="安卓运行"></a>安卓运行</h2><p>在项目目录下运行</p>
<blockquote>
<p>react-native run-android  </p>
</blockquote>
<p>首次运行需要等待数分钟并从网上下载gradle依赖</p>
<h3 id="前提条件：USB调试"><a href="#前提条件：USB调试" class="headerlink" title="前提条件：USB调试"></a>前提条件：USB调试</h3><p>你需要开启USB调试才能在你的设备上安装你的APP。首先，确定你已经打开设备的USB调试开关</p>
<p>确保你的设备已经成功连接。可以输入adb devices来查看:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ adb devices</div><div class="line">List of devices attached</div><div class="line">emulator-5554 offline   # Google模拟器</div><div class="line">14ed2fcc device         # 真实设备</div></pre></td></tr></table></figure></p>
<p>在右边那列看到device说明你的设备已经被正确连接了。  </p>
<font color="#ff6559">注意，你只应当连接仅仅一个设备，如果你连接了多个设备（包含模拟器在内），<br>后续的一些操作可能会失败。拔掉不需要的设备，或者关掉模拟器，确保adb devices的输出只有一个是连接状态。</font>

<p>现在你可以运行react-native run-android来在设备上安装并启动应用了。</p>
<p>注意：在真机上运行时可能会遇到白屏的情况，请找到并开启<font color="#ff6559">悬浮窗权限。</font></p>
<h2 id="从设备上访问开发服务器。"><a href="#从设备上访问开发服务器。" class="headerlink" title="从设备上访问开发服务器。"></a>从设备上访问开发服务器。</h2><p>在启用开发服务器的情况下，你可以快速的迭代修改应用，然后在设备上查看结果。按照下面描述的任意一种方法来使你的运行在电脑上的开发服务器可以从设备上访问到。</p>
<p>注意：现在很多安卓设备已经没有了硬件”Menu”按键，这是我们用来调出开发者菜单的。在这种情况下你可以通过摇晃设备来打开开发者菜单(重新加载、调试，等等……)  </p>
<h3 id="Android-5-0及以上-使用adb-reverse命令"><a href="#Android-5-0及以上-使用adb-reverse命令" class="headerlink" title="(Android 5.0及以上)使用adb reverse命令"></a>(Android 5.0及以上)使用adb reverse命令</h3><font color="#ff6559">注意，这个选项只能在5.0以上版本(API 21+)的安卓设备上使用。</font>

<p>首先把你的设备通过USB数据线连接到电脑上，并开启USB调试（设置–&gt;开发者选项–&gt;USB调试）。</p>
<blockquote>
<p>运行<font color="#c7254e">adb reverse tcp:8081 tcp:8081</font><br>不需要更多配置，你就可以使用Reload JS和其它的开发选项了。  </p>
</blockquote>
<h3 id="Android-5-0以下-通过Wi-Fi连接你的本地开发服务器"><a href="#Android-5-0以下-通过Wi-Fi连接你的本地开发服务器" class="headerlink" title="(Android 5.0以下)通过Wi-Fi连接你的本地开发服务器"></a>(Android 5.0以下)通过Wi-Fi连接你的本地开发服务器</h3><ol>
<li>首先确保你的电脑和手机设备在同一个Wi-Fi环境下。</li>
<li>在设备上运行你的React Native应用。和打开其它App一样操作。</li>
<li>你应该会看到一个“红屏”错误提示。这是正常的，下面的步骤会解决这个报错。</li>
<li>摇晃设备，或者运行adb shell input keyevent 82，可以打开开发者菜单。</li>
<li>点击进入Dev Settings。</li>
<li>点击Debug server host for device。</li>
<li>输入你电脑的IP地址和端口号（譬如10.0.1.1:8081）。在Mac上，你可以在系统设置/网络里找查询你的IP地址。在Windows上，打开命令提示符并输入ipconfig来查询你的IP地址。在Linux上你可以在终端中输入ifconfig来查询你的IP地址。</li>
<li>回到开发者菜单然后选择Reload JS。  </li>
</ol>
<h2 id="异常-："><a href="#异常-：" class="headerlink" title="异常 ："></a>异常 ：</h2><p><img src="/images/Android/React_Native_Windows_Environment/1.png" alt="异常" title="异常">  </p>
<p>异常 ReferenceError:Can’t find variable:_fbBatchedBridge或者Unable to download JS bundle解决方法<br>看到这个，使劲摇晃手机或者直接点击菜单按钮，在出来的菜单里选择“Dev Settings”，然后点击最下面<br>的“Debug server host &amp; port for device“，然后填入你电脑的ip:8081，你的手机和你的电脑<br>必须在同一个局域网内。设置完成以后再重启应用，你就可以看到React Native的欢迎界面了，<br>就是index.android.js页面的内容<br><img src="/images/Android/React_Native_Windows_Environment/2.png" alt="效果" title="效果">  </p>
<h2 id="遇到的坑："><a href="#遇到的坑：" class="headerlink" title="遇到的坑："></a>遇到的坑：</h2><h3 id="小米MIUI系统可能会遇到下面的问题："><a href="#小米MIUI系统可能会遇到下面的问题：" class="headerlink" title="小米MIUI系统可能会遇到下面的问题："></a>小米MIUI系统可能会遇到下面的问题：</h3><p>react-native run-android的时候出现Failed to establish session问题：<br>解决方案：小米手机设置里——-开发者选项———启用MIUI优化 关闭<br><img src="/images/Android/React_Native_Windows_Environment/3.png" alt="异常" title="异常"><br><img src="/images/Android/React_Native_Windows_Environment/4.png" alt="异常" title="异常">  </p>
<h3 id="注意：以下是使用Genymotion时的情况，上面的解决方法无法解决"><a href="#注意：以下是使用Genymotion时的情况，上面的解决方法无法解决" class="headerlink" title="注意：以下是使用Genymotion时的情况，上面的解决方法无法解决"></a>注意：以下是使用Genymotion时的情况，上面的解决方法无法解决</h3><p>可以看到genymotion模拟器使用的网络连接方式是Host-Only方式，此情况下<br>Debug server host &amp; port for device中填入的应该是VirtualBox Host-Only Network<br>的IP:8081（192.168.56.1:8081）,之后再重启应用或者是返回一下再点击菜单选择Reload JS,<br>你就可以看到React Native的欢迎界面了<br><img src="/images/Android/React_Native_Windows_Environment/5.png" alt="异常" title="异常"><br><img src="/images/Android/React_Native_Windows_Environment/6.png" alt="异常" title="异常"><br><img src="/images/Android/React_Native_Windows_Environment/10.png" alt="异常" title="异常"> </p>
<h3 id="错误Could-not-connect-to-development-server："><a href="#错误Could-not-connect-to-development-server：" class="headerlink" title="错误Could not connect to development server："></a>错误Could not connect to development server：</h3><p>如果确定IP地址设置正确了还提示：Could not connect to development server，那么你要确定你的React Native Server启动了，没启动的话启动React Native Server，在项目目录下运行：</p>
<blockquote>
<p>react-native start  </p>
</blockquote>
<p><img src="/images/Android/React_Native_Windows_Environment/7.png" alt="异常" title="异常">   </p>
<h2 id="安卓调试"><a href="#安卓调试" class="headerlink" title="安卓调试"></a>安卓调试</h2><p>打开Chrome，访问 <a href="http://localhost:8081/debugger-ui，应当能看到一个页面。按F12打开开发者菜单选择Sources勾选Pause" target="_blank" rel="external">http://localhost:8081/debugger-ui，应当能看到一个页面。按F12打开开发者菜单选择Sources勾选Pause</a> On Caught Exceptions（如图）</p>
<p>在模拟器或真机菜单中选择Debug JS，即可开始调试<br><img src="/images/Android/React_Native_Windows_Environment/8.png" alt="效果" title="效果"><br><img src="/images/Android/React_Native_Windows_Environment/9.png" alt="效果" title="效果">  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React Native for Android Windows环境搭建&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://cokernut.top/categories/Android/"/>
    
    
      <category term="Android" scheme="http://cokernut.top/tags/Android/"/>
    
      <category term="React Native" scheme="http://cokernut.top/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>Android辅助功能AccessibilityService的使用</title>
    <link href="http://cokernut.top/2016/11/17/Android/Android%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BDAccessibilityService%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://cokernut.top/2016/11/17/Android/Android辅助功能AccessibilityService的使用/</id>
    <published>2016-11-16T16:00:00.000Z</published>
    <updated>2016-11-28T09:44:02.516Z</updated>
    
    <content type="html"><![CDATA[<p>Android辅助功能AccessibilityService的使用<br><a id="more"></a></p>
<h2 id="AccessibilityService官方简介："><a href="#AccessibilityService官方简介：" class="headerlink" title="AccessibilityService官方简介："></a>AccessibilityService官方简介：</h2><blockquote>
<p>The classes in this package are used for development of accessibility service that provide alternative or augmented feedback to the user.<br>使用这个类可以开发用于给用户提供替换或者是增强反馈的辅助功能服务。  </p>
<hr>
<p>An AccessibilityService runs in the background and receives callbacks by the system when AccessibilityEvents are fired. Such events denote some state transition in the user interface, for example, the focus has changed, a button has been clicked, etc. Such a service can optionally request the capability for querying the content of the active window. Development of an accessibility service requires extends this class and implements its abstract methods.<br>一个AccessibilityService在后台运行并接收系统AccessibilityEvents事件的回调，当用户界面的状态发生改变时会触发AccessibilityEvents事件，例如焦点的变化，点击一个按钮。<br>这个服务可以获取到活动窗口的内容，开发一个辅助功能服务需要继承AccessibilityService并实现其中的抽象方法。  </p>
<hr>
<p>An AccessibilityServiceInfo describes an AccessibilityServiceInfo. The system notifies an AccessibilityService for AccessibilityEvents according to the information encapsulated in this class.<br>一个AccessibilityService有一个用于描述AccessibilityService的AccessibilityServiceInfo对象，系统会通知AccessibilityService根据AccessibilityServiceInfo把信息装进AccessibilityEvents中。</p>
</blockquote>
<h2 id="继承AccessibilityService并实现其中的抽象方法。"><a href="#继承AccessibilityService并实现其中的抽象方法。" class="headerlink" title="继承AccessibilityService并实现其中的抽象方法。"></a>继承AccessibilityService并实现其中的抽象方法。</h2><blockquote>
<p>下面是我Service类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">AccessibilityService</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code = INSTALL;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INSTALL = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NEXT = <span class="number">1</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> FINISH = <span class="number">2</span>;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 页面变化回调事件</div><div class="line">     * <span class="doctag">@param</span> event event.getEventType() 当前事件的类型;</div><div class="line">     *              event.getClassName() 当前类的名称;</div><div class="line">     *              event.getSource() 当前页面中的节点信息；</div><div class="line">     *              event.getPackageName() 事件源所在的包名</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAccessibilityEvent</span><span class="params">(AccessibilityEvent event)</span> </span>&#123;</div><div class="line">        <span class="comment">// 事件页面节点信息不为空</span></div><div class="line">        <span class="keyword">if</span> (event.getSource() != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">// 判断事件页面所在的包名，这里是自己</span></div><div class="line">            <span class="keyword">if</span> (event.getPackageName().equals(getApplicationContext().getPackageName())) &#123;</div><div class="line">                <span class="keyword">switch</span> (code) &#123;</div><div class="line">                    <span class="keyword">case</span> INSTALL:</div><div class="line">                        click(event, <span class="string">"安装"</span>, TextView.class.getName());</div><div class="line">                        Log.d(<span class="string">"test======="</span>, <span class="string">"安装"</span>);</div><div class="line">                        code = NEXT;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> NEXT:</div><div class="line">                        click(event, <span class="string">"下一步"</span>, Button.class.getName());</div><div class="line">                        Log.d(<span class="string">"test======="</span>, <span class="string">"下一步"</span>);</div><div class="line">                        code = FINISH;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> FINISH:</div><div class="line">                        click(event, <span class="string">"完成"</span>, TextView.class.getName());</div><div class="line">                        Log.d(<span class="string">"test======="</span>, <span class="string">"完成"</span>);</div><div class="line">                        code = INSTALL;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">default</span>:</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Log.d(<span class="string">"test====="</span>, <span class="string">"the source = null"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 模拟点击</div><div class="line">     * <span class="doctag">@param</span> event 事件</div><div class="line">     * <span class="doctag">@param</span> text 按钮文字</div><div class="line">     * <span class="doctag">@param</span> widgetType 按钮类型，如android.widget.Button，android.widget.TextView</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">click</span><span class="params">(AccessibilityEvent event, String text, String widgetType)</span> </span>&#123;</div><div class="line">        <span class="comment">// 事件页面节点信息不为空</span></div><div class="line">        <span class="keyword">if</span> (event.getSource() != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">// 根据Text搜索所有符合条件的节点, 模糊搜索方式; 还可以通过ID来精确搜索findAccessibilityNodeInfosByViewId</span></div><div class="line">            List&lt;AccessibilityNodeInfo&gt; stop_nodes = event.getSource().findAccessibilityNodeInfosByText(text);</div><div class="line">            <span class="comment">// 遍历节点</span></div><div class="line">            <span class="keyword">if</span> (stop_nodes != <span class="keyword">null</span> &amp;&amp; !stop_nodes.isEmpty()) &#123;</div><div class="line">                AccessibilityNodeInfo node;</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stop_nodes.size(); i++) &#123;</div><div class="line">                    node = stop_nodes.get(i);</div><div class="line">                    <span class="comment">// 判断按钮类型</span></div><div class="line">                    <span class="keyword">if</span> (node.getClassName().equals(widgetType)) &#123;</div><div class="line">                        <span class="comment">// 可用则模拟点击</span></div><div class="line">                        <span class="keyword">if</span> (node.isEnabled()) &#123;</div><div class="line">                            node.performAction(AccessibilityNodeInfo.ACTION_CLICK);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 中断AccessibilityService的反馈时调用</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInterrupt</span><span class="params">()</span> </span>&#123;</div><div class="line">        Log.d(<span class="string">"test====="</span>, <span class="string">"Interrupt"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>AccessibilityService里几个重要的方法：  </p>
</blockquote>
<ul>
<li>onServiceConnected() - 可选。系统会在成功连接上你的服务的时候调用这个方法，在这个方法里你可以做一下初始化工作，例如设备的声音震动管理，也可以调用setServiceInfo()进行配置AccessibilityServiceInfo。</li>
<li>onAccessibilityEvent() - 必须。通过这个函数可以接收系统发送来的AccessibilityEvent，接收来的AccessibilityEvent是经过过滤的，过滤是在配置工作时设置的。</li>
<li>onInterrupt() - 必须。这个在系统想要中断AccessibilityService返给的响应时会调用。在整个生命周期里会被调用多次。</li>
<li>onUnbind() - 可选。在系统将要关闭这个AccessibilityService会被调用。在这个方法中进行一些释放资源的工作。</li>
</ul>
<blockquote>
<p>之后在AndroidManifest文件里注册并添加相应的权限：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">service</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".MyService"</span></div><div class="line">    <span class="attr">android:label</span>=<span class="string">"辅助功能"</span></div><div class="line">    <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_ACCESSIBILITY_SERVICE"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.accessibilityservice.AccessibilityService"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="配置AccessibilityService"><a href="#配置AccessibilityService" class="headerlink" title="配置AccessibilityService"></a>配置AccessibilityService</h2><p>1.可以在onServiceConnected()方法里进行，建立一个AccessibilityServiceInfo对象，通过这个对象设置监听系统事件类型，服务的反馈类型（震动，语音，声音），事件时间间隔，你想要监听的App的包名。最后调用setServiceInfo()进行设置，如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">()</span> </span>&#123;</div><div class="line">       <span class="keyword">super</span>.onServiceConnected();</div><div class="line">       AccessibilityServiceInfo info = <span class="keyword">new</span> AccessibilityServiceInfo();</div><div class="line">       info.eventTypes = AccessibilityEvent.TYPES_ALL_MASK;</div><div class="line">       info.packageNames = PACKAGE_NAMES; </div><div class="line">       ...配置</div><div class="line">       setServiceInfo(info);</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>2.从Android4.0开始，开发者可以通过在AndroidManifest里添加<meta-data>标签配置AccessibilityService，在标签里指出配置文件的位置，如：  </meta-data></p>
<blockquote>
<p>res/xml/accessibility_service_info.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">accessibility-service</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:description</span>=<span class="string">"@string/accessibility_service_description"</span></div><div class="line">    <span class="attr">android:accessibilityEventTypes</span>=<span class="string">"typeAllMask"</span></div><div class="line">    <span class="attr">android:accessibilityFeedbackType</span>=<span class="string">"feedbackGeneric"</span></div><div class="line">    <span class="attr">android:notificationTimeout</span>=<span class="string">"100"</span></div><div class="line">    <span class="attr">android:accessibilityFlags</span>=<span class="string">"flagDefault"</span></div><div class="line">    <span class="attr">android:canRetrieveWindowContent</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:packageNames</span>=<span class="string">"top.cokernut.sample"</span></div><div class="line">    <span class="attr">android:settingsActivity</span>=<span class="string">"com.example.android.accessibility.ServiceSettingsActivity"</span>  /&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!--</span></div><div class="line">         android:description="@string/accessibility_service_description" 描述</div><div class="line">         android:accessibilityEventTypes="typeAllMask"  事件类型</div><div class="line">         android:accessibilityFeedbackType="feedbackGeneric" 反馈类型，声音、震动等</div><div class="line">         android:canRetrieveWindowContent="true", 允许获取手机页面中的信息</div><div class="line">         android:packageNames="top.cokernut.sample" 要监听的包名，过滤作用</div><div class="line">         android:settingsActivity="packname.android.accessibility.ServiceSettingsActivity" packname写自己App的包名</div><div class="line">    --&gt;</div></pre></td></tr></table></figure></p>
<p>事件类型（EventType）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#TYPES_ALL_MASK：所有类型</div><div class="line">#TYPE_VIEW_CLICKED ：单击</div><div class="line">#TYPE_VIEW_LONG_CLICKED ：长按</div><div class="line">#TYPE_VIEW_SELECTED ：选中</div><div class="line">#TYPE_VIEW_FOCUSED ：获取焦点</div><div class="line">#TYPE_VIEW_TEXT_CHANGED ：文字改变</div><div class="line">#TYPE_WINDOW_STATE_CHANGED ：窗口状态改变</div><div class="line">#TYPE_NOTIFICATION_STATE_CHANGED ：通知状态改变</div><div class="line">#TYPE_VIEW_HOVER_ENTER</div><div class="line">#TYPE_VIEW_HOVER_EXIT</div><div class="line">#TYPE_TOUCH_EXPLORATION_GESTURE_START</div><div class="line">#TYPE_TOUCH_EXPLORATION_GESTURE_END</div><div class="line">#TYPE_WINDOW_CONTENT_CHANGED</div><div class="line">#TYPE_VIEW_SCROLLED</div><div class="line">#TYPE_VIEW_TEXT_SELECTION_CHANGED</div><div class="line">#TYPE_ANNOUNCEMENT</div><div class="line">#TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY</div><div class="line">#TYPE_GESTURE_DETECTION_START</div><div class="line">#TYPE_GESTURE_DETECTION_END</div><div class="line">#TYPE_TOUCH_INTERACTION_START</div><div class="line">#TYPE_TOUCH_INTERACTION_END</div><div class="line">#TYPE_WINDOWS_CHANGED</div></pre></td></tr></table></figure></p>
<p>然后在AndroidManifest文件里把配置文件配置到AccessibilityService上：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">service</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".MyService"</span></div><div class="line">    <span class="attr">android:label</span>=<span class="string">"辅助功能"</span></div><div class="line">    <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_ACCESSIBILITY_SERVICE"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.accessibilityservice.AccessibilityService"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">"android.accessibilityservice"</span></div><div class="line">        <span class="attr">android:resource</span>=<span class="string">"@xml/accessibility_service_info"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></div></pre></td></tr></table></figure></p>
</blockquote>
<p>到此一个AccessibilityService的开发就完成了。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote>
<p>MainActivity：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> TextView mInstallTV;</div><div class="line">    <span class="keyword">private</span> TextView mFinishTV;</div><div class="line">    <span class="keyword">private</span> TextView mStartTV;</div><div class="line">    <span class="keyword">private</span> TextView mStopTV;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Button mInstallBT;</div><div class="line">    <span class="keyword">private</span> Button mNextBT;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mInstallTV      = (TextView) findViewById(R.id.tv_install);</div><div class="line">        mStartTV        = (TextView) findViewById(R.id.tv_start);</div><div class="line">        mStopTV         = (TextView) findViewById(R.id.tv_stop);</div><div class="line">        mFinishTV       = (TextView) findViewById(R.id.tv_finish);</div><div class="line">        mInstallBT      = (Button) findViewById(R.id.bt_install);</div><div class="line">        mNextBT         = (Button) findViewById(R.id.bt_next);</div><div class="line">        mInstallTV      .setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mFinishTV       .setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mInstallBT      .setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mNextBT         .setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mStartTV        .setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mStopTV         .setOnClickListener(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.tv_start:</div><div class="line">                <span class="keyword">if</span> (serviceIsRunning()) &#123;</div><div class="line">                    showToast(<span class="string">"服务已经在运行！"</span>);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    startAccessibilityService();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.tv_stop:</div><div class="line">                startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, SecondActivity.class));</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.tv_install:</div><div class="line">                showToast(((TextView)v).getText().toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.tv_finish:</div><div class="line">                showToast(((TextView)v).getText().toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.bt_install:</div><div class="line">                showToast(((Button)v).getText().toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.bt_next:</div><div class="line">                showToast(((Button)v).getText().toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                showToast(<span class="string">"未知按钮"</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(<span class="keyword">final</span> String text)</span> </span>&#123;</div><div class="line">        <span class="comment">//AccessibilityService触发事件是异步的，要回到UI线程改变UI</span></div><div class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了"</span> + text, Toast.LENGTH_LONG).show();</div><div class="line">                Log.d(<span class="string">"text====="</span>, <span class="string">"====="</span> + text);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断自己的应用的AccessibilityService是否在运行</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">serviceIsRunning</span><span class="params">()</span> </span>&#123;</div><div class="line">        ActivityManager am = (ActivityManager) getApplicationContext().getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">        List&lt;ActivityManager.RunningServiceInfo&gt; services = am.getRunningServices(Short.MAX_VALUE);</div><div class="line">        <span class="keyword">for</span> (ActivityManager.RunningServiceInfo info : services) &#123;</div><div class="line">            <span class="keyword">if</span> (info.service.getClassName().equals(getPackageName() + <span class="string">".MyService"</span>)) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 前往设置界面开启服务</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startAccessibilityService</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>)</div><div class="line">                .setTitle(<span class="string">"开启辅助功能"</span>)</div><div class="line">                .setIcon(R.mipmap.ic_launcher)</div><div class="line">                .setMessage(<span class="string">"使用此项功能需要您开启辅助功能"</span>)</div><div class="line">                .setPositiveButton(<span class="string">"立即开启"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">                            <span class="meta">@Override</span></div><div class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                                <span class="comment">// 隐式调用系统设置界面</span></div><div class="line">                                Intent intent = <span class="keyword">new</span> Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);</div><div class="line">                                startActivity(intent);</div><div class="line">                            &#125;</div><div class="line">                        &#125;).create().show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>activity_main.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">ScrollView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"top.cokernut.sample.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/activity_main"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">        <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">        <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">        <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">        <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_install"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#00AA66"</span></div><div class="line">            <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"安装TV"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_install"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"安装Btn"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_next"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"下一步Btn"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_finish"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#00AA66"</span></div><div class="line">            <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"完成"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_start"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#0088FF"</span></div><div class="line">            <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"开始"</span> /&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_stop"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#0088FF"</span></div><div class="line">            <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"停止"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>SecondActivity就一个TextView显示信息，就不贴代码了。</p>
</blockquote>
<font size="5"><a href="https://github.com/cokernut/AccessibilityServiceSample" target="_blank" rel="external">源代码</a></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android辅助功能AccessibilityService的使用&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://cokernut.top/categories/Android/"/>
    
    
      <category term="Android" scheme="http://cokernut.top/tags/Android/"/>
    
      <category term="AccessibilityService" scheme="http://cokernut.top/tags/AccessibilityService/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView的介绍与基本用法</title>
    <link href="http://cokernut.top/2016/10/25/Android/RecyclerView%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <id>http://cokernut.top/2016/10/25/Android/RecyclerView基本用法/</id>
    <published>2016-10-24T16:00:00.000Z</published>
    <updated>2016-11-28T10:05:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>RecyclerView的介绍与基本用法<br><a id="more"></a></p>
<p>RecyclerView是Google在发布Android L时在support-v7包中添加的一个新组件，旨在用来替代ListView。RecyclerView的灵活性要比ListView更好。<br>RecyclerView与ListView原理是类似的：都是仅仅维护少量的View并且可以展示大量的数据集。<br>RecyclerView用以下两种方式简化了数据的展示和处理:  </p>
<ul>
<li>使用LayoutManager来确定每一个item的排列方式。</li>
<li>为增加和删除项目提供默认的动画效果。</li>
</ul>
<p>你也可以定义你自己的LayoutManager和添加删除动画，RecyclerView项目结构如下：   </p>
<ul>
<li>Adapter：使用RecyclerView之前，你需要一个继承自RecyclerView.Adapter的适配器，作用是将数据与每一个item的界面进行绑定。</li>
<li>LayoutManager：用来确定每一个item如何进行排列摆放，何时展示和隐藏。回收或重用一个View的时候，LayoutManager会向适配器请求新的数据来替换旧的数据，这种机制避免了创建过多的View和频繁的调用findViewById方法（与ListView原理类似）。<br>  目前SDK中提供了三种自带的LayoutManager:    <ul>
<li>LinearLayoutManager：线性布局，可以实现横向或者纵向的滑动列表（类型ListVIew）</li>
<li>GridLayoutManager：表格布局，可以实现类似GridView布局</li>
<li>StaggeredGridLayoutManager：瀑布流布局，可以实现瀑布流效果</li>
</ul>
</li>
</ul>
<p>当然除了上面的三种内部布局之外，我们还可以继承RecyclerView.LayoutManager来实现一个自定义的LayoutManager。<br>Animations(动画)效果：RecyclerView对于Item的添加和删除是默认开启动画的。我们当然也可以通过RecyclerView.ItemAnimator类定制动画，然后通过RecyclerView.setItemAnimator()方法来进行使用。<br>RecyclerView相关的类：  </p>
<table>
<thead>
<tr>
<th>类</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>RecyclerView.Adapter</td>
<td>托管数据集合，为每个Item创建视图</td>
</tr>
<tr>
<td>RecyclerView.ViewHolder</td>
<td>承载Item视图的子视图</td>
</tr>
<tr>
<td>RecyclerView.LayoutManager</td>
<td>负责Item视图的布局</td>
</tr>
<tr>
<td>RecyclerView.ItemDecoration</td>
<td>为每个Item视图添加子视图，在Demo中被用来绘制Divider</td>
</tr>
<tr>
<td>RecyclerView.ItemAnimator</td>
<td>负责添加、删除数据时的动画效果</td>
</tr>
</tbody>
</table>
<h2 id="RecyclerView的基本用法"><a href="#RecyclerView的基本用法" class="headerlink" title="RecyclerView的基本用法"></a>RecyclerView的基本用法</h2><p>1、因为RecyclerView是support-v7中的控件，要使用的话我们首先要在build.gradle文件中添加RecyclerView的依赖，添加后我们就能在我们的项目中使用RecyclerView控件了：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    ....</div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:23.2.1'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、在xml布局文件中使用RecyclerView：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/rv_view"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:scrollbars</span>=<span class="string">"none"</span>/&gt;</div></pre></td></tr></table></figure></p>
<p>3、对RecyclerView进行获取并设置：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> RecyclerView mRecyclerView;</div><div class="line">    <span class="keyword">private</span> MyAdapter mAdapter;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; mDatas = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mRecyclerView = (RecyclerView) findViewById(R.id.rv_view);</div><div class="line">        <span class="comment">//设置LayoutManager类似ListView效果</span></div><div class="line">        mRecyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(getActivity()));</div><div class="line">        <span class="comment">//类似横向ListView效果，不反转</span></div><div class="line">        <span class="comment">//mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.HORIZONTAL, false));</span></div><div class="line">        <span class="comment">//类似GridView效果，2列</span></div><div class="line">        <span class="comment">//mRecyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 2));</span></div><div class="line">        <span class="comment">//竖向瀑布流效果，2列</span></div><div class="line">        <span class="comment">//mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL));</span></div><div class="line">        mRecyclerView.setItemAnimator(<span class="keyword">new</span> DefaultItemAnimator()); <span class="comment">//设置默认动画</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</div><div class="line">            mDatas.add(<span class="string">"卡片："</span> + i);</div><div class="line">        &#125;</div><div class="line">        mAdapter = <span class="keyword">new</span> MyAdapter(getActivity(), mDatas);</div><div class="line">        mRecyclerView.setAdapter(mAdapter);</div><div class="line">        mAdapter.setOnItemClickLitener(<span class="keyword">new</span> MyAdapter.OnItemClickLitener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">                Toast.makeText(getActivity(), <span class="string">"卡片"</span> + position, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Adapter:  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RecyclerView</span>.<span class="title">ViewHolder</span>&gt; <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> LayoutInflater mInflater;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; mDatas = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ZERO = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ONE = <span class="number">1</span>;</div><div class="line">    <span class="keyword">private</span> OnItemClickLitener mOnItemClickLitener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyAdapter</span><span class="params">(Context context, ArrayList&lt;String&gt; datas)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mDatas = datas;</div><div class="line">        <span class="keyword">this</span>.mInflater = LayoutInflater.from(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//添加数据</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String model, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        mDatas.add(position, model);</div><div class="line">        notifyItemInserted(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//更新数据</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(ArrayList&lt;String&gt; data)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mDatas= data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//删除数据</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeItem</span><span class="params">(String model)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> position = mDatas.indexOf(model);</div><div class="line">        mDatas.remove(position);</div><div class="line">        notifyItemRemoved(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//删除数据</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        mDatas.remove(position);</div><div class="line">        notifyItemRemoved(position);</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mOnItemClickLitener != <span class="keyword">null</span>) &#123;</div><div class="line">            mOnItemClickLitener.onItemClick(view, (<span class="keyword">int</span>)view.getTag());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickLitener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickLitener</span><span class="params">(OnItemClickLitener mOnItemClickLitener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mOnItemClickLitener = mOnItemClickLitener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> RecyclerView.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (viewType == ONE) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyViewHolder(mInflater.inflate(R.layout.item_0, parent, <span class="keyword">false</span>));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyViewHolderTwo(mInflater.inflate(R.layout.item_1, parent, <span class="keyword">false</span>));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> RecyclerView.ViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (holder <span class="keyword">instanceof</span> MyViewHolder) &#123;</div><div class="line">            MyViewHolder holder1 = (MyViewHolder) holder;</div><div class="line">            holder1.txt.setText(mDatas.get(position));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            MyViewHolderTwo holder1 = (MyViewHolderTwo) holder;</div><div class="line">            holder1.txt.setText(mDatas.get(position));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mOnItemClickLitener != <span class="keyword">null</span>) &#123;</div><div class="line">            holder.itemView.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">            holder.itemView.setTag(position);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemViewType</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (position % <span class="number">2</span> == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> ZERO;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> ONE;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mDatas.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</div><div class="line">        TextView txt;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            txt = (TextView) itemView.findViewById(R.id.tv_txt);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyViewHolderTwo</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</div><div class="line">        TextView txt;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyViewHolderTwo</span><span class="params">(View itemView)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            txt = (TextView) itemView.findViewById(R.id.tv_txt);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为RecyclerView默认没有实现Item的点击事件，所以Item的点击事件需要我们自己来设置，在上面的代码中我们也可以看出来：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> OnItemClickLitener mOnItemClickLitener;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickLitener</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickLitener</span><span class="params">(OnItemClickLitener mOnItemClickLitener)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.mOnItemClickLitener = mOnItemClickLitener;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mOnItemClickLitener != <span class="keyword">null</span>) &#123;</div><div class="line">        mOnItemClickLitener.onItemClick(view, (<span class="keyword">int</span>)view.getTag());</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> RecyclerView.ViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (holder <span class="keyword">instanceof</span> MyViewHolder) &#123;</div><div class="line">        MyViewHolder holder1 = (MyViewHolder) holder;</div><div class="line">        holder1.txt.setText(mDatas.get(position));</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        MyViewHolderTwo holder1 = (MyViewHolderTwo) holder;</div><div class="line">        holder1.txt.setText(mDatas.get(position));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mOnItemClickLitener != <span class="keyword">null</span>) &#123;</div><div class="line">        holder.itemView.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        holder.itemView.setTag(position);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mAdapter.setOnItemClickLitener(<span class="keyword">new</span> MyAdapter.OnItemClickLitener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        Toast.makeText(getActivity(), <span class="string">"卡片"</span> + position, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>注意：<br>在ListView当中，修改数据后可以用Adapter的notifyDataSetChanged()更新界面。而在RecyclerView中还有一些别的方法可以更新数据和界面：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//添加数据</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String model, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">    mDatas.add(position, model);</div><div class="line">    notifyItemInserted(position);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//添加数据集</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(ArrayList&lt;String&gt; data)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.mDatas= data;</div><div class="line">    notifyDataSetChanged();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//删除数据</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeItem</span><span class="params">(String model)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> position = mDatas.indexOf(model);</div><div class="line">    mDatas.remove(position);</div><div class="line">    notifyItemRemoved(position);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//删除数据</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">    mDatas.remove(position);</div><div class="line">    notifyItemRemoved(position);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>以上就是RecyclerView的基本用法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RecyclerView的介绍与基本用法&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://cokernut.top/categories/Android/"/>
    
    
      <category term="Android" scheme="http://cokernut.top/tags/Android/"/>
    
      <category term="Recyclerview" scheme="http://cokernut.top/tags/Recyclerview/"/>
    
  </entry>
  
  <entry>
    <title>Android WebView实现原生与JavaScript的交互</title>
    <link href="http://cokernut.top/2016/10/12/Android/Android%20WebView%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%94%9F%E4%B8%8EJavaScript%E7%9A%84%E4%BA%A4%E4%BA%92/"/>
    <id>http://cokernut.top/2016/10/12/Android/Android WebView实现原生与JavaScript的交互/</id>
    <published>2016-10-11T16:00:00.000Z</published>
    <updated>2016-11-28T10:06:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android WebView实现原生与JavaScript的交互<br><a id="more"></a></p>
<p>在现在的Android开发中，为了追求开发的效率以及移植的便利性，越来越多的开发者会在App中使用WebView<br>作为部分业务内容展示与交互的主要载体。那么在这种Hybrid App中，难免就会遇到网页与Java<br>原生的交互问题，比如说调用Java方法去做那部分网页不能完成的功能或者是通过Java原生代码<br>来调用网页当中实现的一些功能，其中一种解决方案就是利用Java与网页中的JavaScript进行交互。 </p>
<p>实现思路是:  </p>
<ul>
<li>通过WebView注入带有Java方法的JavaScript对象，然后网页当中利用JavaScript对注入的方法进行调用这样就实现了网页调用原生功能</li>
<li>通过WebView注入JavaScript的方式来实现原生调用网页中的功能</li>
</ul>
<h2 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h2><p>1、 自定义WebView  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebView</span> <span class="keyword">extends</span> <span class="title">WebView</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> WebViewInterface mWebViewInterface;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyWebView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        init();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWebViewInterface</span><span class="params">(WebViewInterface baseWebViewInterface)</span> </span>&#123;</div><div class="line">        mWebViewInterface = baseWebViewInterface;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//回调方法接口</span></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">WebViewInterface</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String msg)</span></span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">getTitle</span><span class="params">(String title)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">        WebSettings ws = getSettings();</div><div class="line">        setLayoutParams(<span class="keyword">new</span> ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));</div><div class="line">        setHorizontalScrollBarEnabled(<span class="keyword">false</span>);</div><div class="line">        setVerticalScrollBarEnabled(<span class="keyword">false</span>);</div><div class="line">        ws.setJavaScriptEnabled(<span class="keyword">true</span>);</div><div class="line">        ws.setDomStorageEnabled(<span class="keyword">true</span>);</div><div class="line">        ws.setSupportZoom(<span class="keyword">true</span>);</div><div class="line">        ws.setBuiltInZoomControls(<span class="keyword">true</span>);</div><div class="line">        ws.setBuiltInZoomControls(<span class="keyword">false</span>);</div><div class="line">        ws.setJavaScriptCanOpenWindowsAutomatically(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">//注入带有Java方法的JS对象，名字可以自定义（js_obj）</span></div><div class="line">        addJavascriptInterface(<span class="keyword">new</span> InJavaScriptObj(), <span class="string">"js_obj"</span>);</div><div class="line">        setWebViewClient(<span class="keyword">new</span> MyWebViewClient());</div><div class="line">        setWebChromeClient(<span class="keyword">new</span> MyWebChromeClient());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">InJavaScriptObj</span> </span>&#123;</div><div class="line">        <span class="comment">//android 4.2 之后版本提供给js调用的函数必须带有注释语句@JavascriptInterface</span></div><div class="line">        <span class="meta">@JavascriptInterface</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">            mWebViewInterface.showToast(msg);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebViewClient</span> <span class="keyword">extends</span> <span class="title">WebViewClient</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">            <span class="comment">//加载网页url，此处可以根据url进行相应的处理</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.shouldOverrideUrlLoading(view, url);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">            <span class="comment">//实现自己的逻辑</span></div><div class="line">            <span class="keyword">super</span>.onPageFinished(view, url);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onPageStarted(view, url, favicon);</div><div class="line">            <span class="comment">//实现自己的逻辑</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedError</span><span class="params">(WebView view, WebResourceRequest request, WebResourceError error)</span> </span>&#123;</div><div class="line">            <span class="comment">//错误处理</span></div><div class="line">            <span class="keyword">super</span>.onReceivedError(view, request, error);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedHttpError</span><span class="params">(WebView view, WebResourceRequest request, WebResourceResponse errorResponse)</span> </span>&#123;</div><div class="line">            <span class="comment">//http错误处理</span></div><div class="line">            <span class="keyword">super</span>.onReceivedHttpError(view, request, errorResponse);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebChromeClient</span> <span class="keyword">extends</span> <span class="title">WebChromeClient</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedTitle</span><span class="params">(WebView view, String title)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onReceivedTitle(view, title);</div><div class="line">            <span class="comment">//这个方法是收到网页的title的时候会调用的，这里我们可以拿到网页的title显示处理</span></div><div class="line">            mWebViewInterface.getTitle(title);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span><span class="params">(WebView view, String url, String message, <span class="keyword">final</span> JsResult result)</span> </span>&#123;</div><div class="line">            <span class="comment">// 在这里你可以拦截网页的Alert来实现自己的逻辑，return true停止事件的继续传播，也可以使用默认实现</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.onJsAlert(view, url, message, result);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsConfirm</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">            <span class="comment">// 在这里你可以实现拦截网页的Confirm来实现自己的逻辑，return true停止事件的继续传播，也可以使用默认实现</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.onJsConfirm(view, url, message, result);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(WebView view, <span class="keyword">int</span> newProgress)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.onProgressChanged(view, newProgress);</div><div class="line">            <span class="comment">//在这里你可以进度的变化实现自己的逻辑</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsPrompt</span><span class="params">(WebView view, String url, String message, String defaultValue, JsPromptResult result)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.onJsPrompt(view, url, message, defaultValue, result);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、使用自定义WebView来实现功能</p>
<blockquote>
<p>布局文件：  </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;  </div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>  </span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span>  </div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>  </div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;  </div><div class="line">  </div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span>  </span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rl_top"</span>  </div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span>  </div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>  </div><div class="line">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span>  </div><div class="line">        <span class="attr">android:background</span>=<span class="string">"#7DD13F"</span>  </div><div class="line">        <span class="attr">android:minHeight</span>=<span class="string">"?attr/actionBarSize"</span>&gt;  </div><div class="line">  </div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span>  </span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/iv_back"</span>  </div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span>  </div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>  </div><div class="line">            <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span>  </div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span>  </div><div class="line">            <span class="attr">android:paddingBottom</span>=<span class="string">"12dp"</span>  </div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"12dp"</span>  </div><div class="line">            <span class="attr">android:paddingTop</span>=<span class="string">"12dp"</span>  </div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@mipmap/icon_back"</span> /&gt;  </div><div class="line">  </div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span>  </span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_title"</span>  </div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span>  </div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>  </div><div class="line">            <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span>  </div><div class="line">            <span class="attr">android:ellipsize</span>=<span class="string">"end"</span>  </div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span>  </div><div class="line">            <span class="attr">android:maxEms</span>=<span class="string">"8"</span>  </div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#AF0000"</span>  </div><div class="line">            <span class="attr">android:singleLine</span>=<span class="string">"true"</span>  </div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span> /&gt;  </div><div class="line">  </div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span>  </span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_menu"</span>  </div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span>  </div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>  </div><div class="line">            <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span>  </div><div class="line">            <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span>  </div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center_vertical|right"</span>  </div><div class="line">            <span class="attr">android:text</span>=<span class="string">"网页弹窗"</span>  </div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span>/&gt;  </div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span>  </div><div class="line">  </div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span>  </span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll_webview"</span>  </div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span>  </div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>  </div><div class="line">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/rl_top"</span>  </div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;  </div><div class="line">  </div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span>  </div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>WebViewActivity:  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebViewActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">MyWebView</span>.<span class="title">WebViewInterface</span>, <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> LinearLayout    mWebViewLl;</div><div class="line">    <span class="keyword">private</span> MyWebView       mWebView;</div><div class="line">    <span class="keyword">private</span> ImageView       mBackIv;</div><div class="line">    <span class="keyword">private</span> TextView        mTitleTv;</div><div class="line">    <span class="keyword">private</span> TextView        mMenuTv;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String          url;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SET_TITLE = <span class="number">0x101</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (msg.what == SET_TITLE) &#123;</div><div class="line">                setMyTitle((String) msg.obj);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_webview);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        url = getIntent().getStringExtra(<span class="string">"url"</span>);</div><div class="line">        mMenuTv     = (TextView) findViewById(R.id.tv_menu);</div><div class="line">        mBackIv     = (ImageView) findViewById(R.id.iv_back);</div><div class="line">        mWebViewLl  = (LinearLayout) findViewById(R.id.ll_webview);</div><div class="line">        mTitleTv    = (TextView) findViewById(R.id.tv_title);</div><div class="line">        mMenuTv.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mBackIv.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        mWebView    = <span class="keyword">new</span> MyWebView(<span class="keyword">this</span>);</div><div class="line">        mWebViewLl.addView(mWebView);</div><div class="line">        mWebView.setWebViewInterface(<span class="keyword">this</span>);</div><div class="line">        mWebView.loadUrl(url);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">//回调方法的实现</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">        Toast.makeText(<span class="keyword">this</span>, msg, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//回调方法的实现</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getTitle</span><span class="params">(String title)</span> </span>&#123;</div><div class="line">        Message message = <span class="keyword">new</span> Message();</div><div class="line">        message.what = SET_TITLE;</div><div class="line">        message.obj = title;</div><div class="line">        mHandler.sendMessage(message);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setMyTitle</span><span class="params">(String title)</span> </span>&#123;</div><div class="line">        mTitleTv.setText(title);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</div><div class="line">        back();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">back</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mWebView.canGoBack()) &#123;</div><div class="line">            mWebView.goBack();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">this</span>.finish();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.iv_back:</div><div class="line">                back();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.tv_menu:</div><div class="line">                <span class="comment">//注入JS代码,Java调用JS</span></div><div class="line">                mWebView.loadUrl(<span class="string">"javascript:alert('网页弹窗alert');"</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>网页代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">        a&#123;</div><div class="line">            color:green;</div><div class="line">            font-weight:900;</div><div class="line">            font-size:80px;</div><div class="line">            height:400;</div><div class="line">            width:500;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        button&#123;</div><div class="line">            color:green;</div><div class="line">            font-size:50px;</div><div class="line">            height:300;</div><div class="line">            width:400;</div><div class="line">        &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">        //JS调用Java方法，js_obj为网页中带有Java方法的对象，可以自定义但是要和注入的名字一样</div><div class="line">        function myFunction() &#123;</div><div class="line">            js_obj.showToast("显示Toast");</div><div class="line">        &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"file:///android_asset/test_1.html"</span>&gt;</span> 链 接 <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span> &gt;</span>显示Toast<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
</blockquote>
<p>效果图:<br><img src="/images/Android/Webview_native_javascript_interaction/1.png" alt="效果图" title="效果图">  </p>
<font size="5"><a href="https://github.com/cokernut/CustomWebView" target="_blank" rel="external">源代码</a></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android WebView实现原生与JavaScript的交互&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://cokernut.top/categories/Android/"/>
    
    
      <category term="Android" scheme="http://cokernut.top/tags/Android/"/>
    
      <category term="WebView" scheme="http://cokernut.top/tags/WebView/"/>
    
  </entry>
  
  <entry>
    <title>Python3学习笔记--基础知识</title>
    <link href="http://cokernut.top/2016/10/04/Python/Python3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://cokernut.top/2016/10/04/Python/Python3学习笔记--基础知识/</id>
    <published>2016-10-03T16:00:00.000Z</published>
    <updated>2016-11-28T09:51:51.896Z</updated>
    
    <content type="html"><![CDATA[<p>Python3学习笔记–基础知识<br><a id="more"></a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div></pre></td><td class="code"><pre><div class="line"><span class="string">''' </span></div><div class="line">Python3 基本数据类型 </div><div class="line">Numbers（数字） </div><div class="line">String（字符串） </div><div class="line">List（列表） </div><div class="line">Tuple（元组） </div><div class="line">Sets（集合） </div><div class="line">Dictionaries（字典） </div><div class="line">空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。 </div><div class="line">布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，在Python中，可以直接用True、False表示布尔值（请注意大小写） </div><div class="line">'''  </div><div class="line">  </div><div class="line"><span class="string">""" </span></div><div class="line">Numbers（数字） </div><div class="line">Python 3支持int、float、bool、complex（复数）。 </div><div class="line">数值类型的赋值和计算都是很直观的，就像大多数语言一样。内置的type()函数可以用来查询变量所指的对象类型。 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a, b, c, d = 20, 5.5, True, 4+3j </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(type(a), type(b), type(c), type(d)) </div><div class="line">&lt;class 'int'&gt; &lt;class 'float'&gt; &lt;class 'bool'&gt; &lt;class 'complex'&gt; </div><div class="line">数值运算： </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>5 + 4  # 加法 </div><div class="line">9 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>4.3 - 2 # 减法 </div><div class="line">2.3 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>3 * 7  # 乘法 </div><div class="line">21 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>2 / 4  # 除法，得到一个浮点数 </div><div class="line">0.5 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>2 // 4 # 除法，得到一个整数 </div><div class="line">0 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>17 % 3 # 取余 </div><div class="line">2 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>2 ** 5 # 乘方 </div><div class="line">32 </div><div class="line">注意： </div><div class="line">1、Python可以同时为多个变量赋值，如a, b = 1, 2。 </div><div class="line">2、一个变量可以通过赋值指向不同类型的对象。 </div><div class="line">3、数值的除法（/）总是返回一个浮点数，要获取整数使用//操作符。 </div><div class="line">4、在混合计算时，Python会把整型转换成为浮点数。 </div><div class="line"> </div><div class="line">String（字符串） </div><div class="line">Python中的字符串str用单引号(' ')或双引号(" ")括起来，同时使用反斜杠(\)转义特殊字符。 </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s = 'Yes,he doesn\'t' </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(s, type(s), len(s)) </div><div class="line">Yes,he doesn't &lt;class 'str'&gt; 14 </div><div class="line">如果你不想让反斜杠发生转义，可以在字符串前面添加一个r，表示原始字符串： </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print('C:\some\name') </div><div class="line">C:\some </div><div class="line">ame </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(r'C:\some\name') </div><div class="line">C:\some\name </div><div class="line">另外，反斜杠可以作为续行符，表示下一行是上一行的延续。还可以使用"""<span class="comment">#"""或者'''...'''跨越多行。  </span></div><div class="line"><span class="string">"""字符串可以使用 + 运算符串连接在一起，或者用 * 运算符重复：  </span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print('str'+'ing', 'my'*3)  </div><div class="line">string mymymy  </div><div class="line">Python中的字符串有两种索引方式，第一种是从左往右，从0开始依次增加；第二种是从右往左，从-1开始依次减少。  </div><div class="line">注意，没有单独的字符类型，一个字符就是长度为1的字符串。  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>word = 'Python'  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(word[0], word[5])  </div><div class="line">P n  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(word[-1], word[-6])  </div><div class="line">n P  </div><div class="line">还可以对字符串进行切片，获取一段子串。用冒号分隔两个索引，形式为变量[头下标:尾下标]。  </div><div class="line">截取的范围是前闭后开的，并且两个索引都可以省略：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>word = 'ilovepython'  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>word[1:5]  </div><div class="line">'love'  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>word[:]  </div><div class="line">'ilovepython'  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>word[5:]  </div><div class="line">'python'  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>word[-10:-6]  </div><div class="line">'love'  </div><div class="line">与C字符串不同的是，Python字符串不能被改变。向一个索引位置赋值，比如word[0] = 'm'会导致错误。  </div><div class="line">注意：  </div><div class="line">1、反斜杠可以用来转义，使用r可以让反斜杠不发生转义。  </div><div class="line">2、字符串可以用+运算符连接在一起，用*运算符重复。  </div><div class="line">3、Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。  </div><div class="line">4、Python中的字符串不能改变。  </div><div class="line">  </div><div class="line">List（列表）  </div><div class="line">List（列表） 是 Python 中使用最频繁的数据类型。  </div><div class="line">列表是写在方括号之间、用逗号分隔开的元素列表。列表中元素的类型可以不相同：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = ['him', 25, 100, 'her']  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)  </div><div class="line">['him', 25, 100, 'her']  </div><div class="line">和字符串一样，列表同样可以被索引和切片，列表被切片后返回一个包含所需元素的新列表。详细的在这里就不赘述了。  </div><div class="line">列表还支持串联操作，使用+操作符：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [1, 2, 3, 4, 5]  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a + [6, 7, 8]  </div><div class="line">[1, 2, 3, 4, 5, 6, 7, 8]  </div><div class="line">与Python字符串不一样的是，列表中的元素是可以改变的：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = [1, 2, 3, 4, 5, 6]  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[0] = 9  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[2:5] = [13, 14, 15]  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a  </div><div class="line">[9, 2, 13, 14, 15, 6]  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[2:5] = []   # 删除  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a  </div><div class="line">[9, 2, 6]  </div><div class="line">List内置了有很多方法，例如append()、pop()等等。  </div><div class="line">list.append(x)  把一个元素添加到列表的结尾，相当于 a[len(a):] = [x]。  </div><div class="line">list.extend(L)  通过添加指定列表的所有元素来扩充列表，相当于 a[len(a):] = L。  </div><div class="line">list.insert(i, x)   在指定位置插入一个元素。第一个参数是准备插入到其前面的那个元素的索引，例如 a.insert(0, x) 会插入到整个列表之前，而 a.insert(len(a), x) 相当于 a.append(x) 。  </div><div class="line">list.remove(x)  删除列表中值为 x 的第一个元素。如果没有这样的元素，就会返回一个错误。  </div><div class="line">list.pop([i])   从列表的指定位置删除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随即从列表中被删除。（方法中 i 两边的方括号表示这个参数是可选的，而不是要求你输入一对方括号，你会经常在 Python 库参考手册中遇到这样的标记。）  </div><div class="line">list.clear()    移除列表中的所有项，等于del a[:]。  </div><div class="line">list.index(x)   返回列表中第一个值为 x 的元素的索引。如果没有匹配的元素就会返回一个错误。  </div><div class="line">list.count(x)   返回 x 在列表中出现的次数。  </div><div class="line">list.sort() 对列表中的元素进行排序。  </div><div class="line">list.reverse()  倒排列表中的元素。  </div><div class="line">list.copy() 返回列表的浅复制，等于a[:]。  </div><div class="line">注意：  </div><div class="line">1、List写在方括号之间，元素用逗号隔开。  </div><div class="line">2、和字符串一样，list可以被索引和切片。  </div><div class="line">3、List可以使用+操作符进行拼接。  </div><div class="line">4、List中的元素是可以改变的。  </div><div class="line">  </div><div class="line">Tuple（元组）  </div><div class="line">元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。  </div><div class="line">元组中的元素类型也可以不相同：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = (1991, 2014, 'physics', 'math')  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(a, type(a), len(a))  </div><div class="line">(1991, 2014, 'physics', 'math') &lt;class 'tuple'&gt; 4  </div><div class="line">元组与字符串类似，可以被索引且下标索引从0开始，也可以进行截取/切片（看上面，这里不再赘述）。  </div><div class="line">其实，可以把字符串看作一种特殊的元组。  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tup = (1, 2, 3, 4, 5, 6)  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(tup[0], tup[1:5])  </div><div class="line">1 (2, 3, 4, 5)  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tup[0] = 11  # 修改元组元素的操作是非法的  </div><div class="line">虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。  </div><div class="line">构造包含0个或1个元素的tuple是个特殊的问题，所以有一些额外的语法规则：  </div><div class="line">tup1 = () # 空元组  </div><div class="line">tup2 = (20,) # 一个元素，需要在元素后添加逗号  </div><div class="line">另外，元组也支持用+操作符：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tup1, tup2 = (1, 2, 3), (4, 5, 6)  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(tup1+tup2)  </div><div class="line">(1, 2, 3, 4, 5, 6)  </div><div class="line">string、list和tuple都属于sequence（序列）。  </div><div class="line">注意：  </div><div class="line">1、与字符串一样，元组的元素不能修改。  </div><div class="line">2、元组也可以被索引和切片，方法一样。  </div><div class="line">3、注意构造包含0或1个元素的元组的特殊语法规则。  </div><div class="line">4、元组也可以使用+操作符进行拼接。  </div><div class="line">  </div><div class="line">Sets（集合）  </div><div class="line">集合（set）是一个无序不重复元素的集。  </div><div class="line">基本功能是进行成员关系测试和消除重复元素。  </div><div class="line">可以使用大括号 或者 set()函数创建set集合，注意：创建一个空集合必须用 set() 而不是 &#123; &#125;，因为&#123; &#125;是用来创建一个空字典。  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>student = &#123;'Tom', 'Jim', 'Mary', 'Tom', 'Jack', 'Rose'&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(student)   # 重复的元素被自动去掉  </div><div class="line">&#123;'Jim', 'Jack', 'Mary', 'Tom', 'Rose'&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>'Rose' in student  # membership testing（成员测试）  </div><div class="line">True  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span># set可以进行集合运算  </div><div class="line"><span class="meta">... </span> </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = set('abracadabra')  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>b = set('alacazam')  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a  </div><div class="line">&#123;'a', 'b', 'c', 'd', 'r'&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a - b     # a和b的差集  </div><div class="line">&#123;'b', 'd', 'r'&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a | b     # a和b的并集  </div><div class="line">&#123;'l', 'm', 'a', 'b', 'c', 'd', 'z', 'r'&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a &amp; b     # a和b的交集  </div><div class="line">&#123;'a', 'c'&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a ^ b     # a和b中不同时存在的元素  </div><div class="line">&#123;'l', 'm', 'b', 'd', 'z', 'r'&#125;  </div><div class="line">  </div><div class="line">Dictionaries（字典）  </div><div class="line">字典（dictionary）是Python中另一个非常有用的内置数据类型。  </div><div class="line">字典是一种映射类型（mapping type），它是一个无序的键 : 值对集合。  </div><div class="line">关键字必须使用不可变类型，也就是说list和包含可变类型的tuple不能做关键字。  </div><div class="line">在同一个字典中，关键字还必须互不相同。  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>dic = &#123;&#125;  # 创建空字典  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tel = &#123;'Jack':1557, 'Tom':1320, 'Rose':1886&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tel  </div><div class="line">&#123;'Tom': 1320, 'Jack': 1557, 'Rose': 1886&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tel['Jack']   # 主要的操作：通过key查询  </div><div class="line">1557  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>del tel['Rose']  # 删除一个键值对  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tel['Mary'] = 4127  # 添加一个键值对  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tel  </div><div class="line">&#123;'Tom': 1320, 'Jack': 1557, 'Mary': 4127&#125;  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>list(tel.keys())  # 返回所有key组成的list  </div><div class="line">['Tom', 'Jack', 'Mary']  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(tel.keys()) # 按key排序  </div><div class="line">['Jack', 'Mary', 'Tom']  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>'Tom' in tel       # 成员测试  </div><div class="line">True  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>'Mary' not in tel  # 成员测试  </div><div class="line">False  </div><div class="line">构造函数 dict() 直接从键值对sequence中构建字典，当然也可以进行推导，如下：  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>dict([('sape', 4139), ('guido', 4127), ('jack', 4098)])  </div><div class="line">&#123;'jack': 4098, 'sape': 4139, 'guido': 4127&#125;  </div><div class="line">  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;x: x**2 for x in (2, 4, 6)&#125;  </div><div class="line">&#123;2: 4, 4: 16, 6: 36&#125;  </div><div class="line">  </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>dict(sape=4139, guido=4127, jack=4098)  </div><div class="line">&#123;'jack': 4098, 'sape': 4139, 'guido': 4127&#125;  </div><div class="line">另外，字典类型也有一些内置的函数，例如clear()、keys()、values()等。  </div><div class="line">注意：  </div><div class="line">1、字典是一种映射类型，它的元素是键值对。  </div><div class="line">2、字典的关键字必须为不可变类型，且不能重复。  </div><div class="line">3、创建空字典使用&#123; &#125;。  </div><div class="line">"""  </div><div class="line">  </div><div class="line"><span class="comment">#输出  </span></div><div class="line">print(<span class="string">'hello, world'</span>)  </div><div class="line">  </div><div class="line"><span class="comment">#输入  </span></div><div class="line">name = input()  </div><div class="line">  </div><div class="line"><span class="comment"># 获取用户输入的数字  </span></div><div class="line">num = int(input(<span class="string">"请输入一个数字: "</span>))  </div><div class="line">a = float(input(<span class="string">'请输入一个数字:'</span>))  </div><div class="line">  </div><div class="line"><span class="comment">#条件判断if..else  </span></div><div class="line">a = <span class="number">1</span>  </div><div class="line"><span class="keyword">if</span> a &gt;= <span class="number">0</span>:  </div><div class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:  </div><div class="line">        print(<span class="string">'a=0'</span>)  </div><div class="line">    <span class="keyword">else</span>:  </div><div class="line">        print(<span class="string">'a是正数'</span>)  </div><div class="line"><span class="keyword">else</span>:  </div><div class="line">    print(<span class="string">'a是负数'</span>)  </div><div class="line"><span class="comment">#if..elif..else  </span></div><div class="line"><span class="keyword">if</span> a == <span class="number">0</span>:  </div><div class="line">    print(<span class="string">'a=0'</span>)  </div><div class="line"><span class="keyword">elif</span> a &gt; <span class="number">0</span>:  </div><div class="line">    print(<span class="string">'a是正数'</span>)  </div><div class="line"><span class="keyword">else</span>:  </div><div class="line">    print(<span class="string">'a是负数'</span>)  </div><div class="line">  </div><div class="line"><span class="comment">#循环  </span></div><div class="line"><span class="comment">#for...in循环  </span></div><div class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  </div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:  </div><div class="line">    print(num)  </div><div class="line"><span class="comment">#while循环  </span></div><div class="line">i = <span class="number">0</span>  </div><div class="line"><span class="keyword">while</span> i &lt; len(nums):  </div><div class="line">    print(nums[i])  </div><div class="line">    i += <span class="number">1</span>  </div><div class="line">  </div><div class="line"><span class="comment">#pass语句什么都不做。它只在语法上需要一条语句但程序不需要任何操作时使用  </span></div><div class="line"><span class="comment">#break语句可以跳出for和while的循环体。如果你从for或while循环中终止，任何对应的循环else块将不执行。  </span></div><div class="line"><span class="comment">#continue语句被用来告诉Python跳过当前循环块中的剩余语句，然后继续进行下一轮循环。  </span></div><div class="line">  </div><div class="line"><span class="comment">#交换变量  </span></div><div class="line">x = input(<span class="string">'输入 x 值: '</span>)  </div><div class="line">y = input(<span class="string">'输入 y 值: '</span>)  </div><div class="line"><span class="comment"># 不使用临时变量  </span></div><div class="line">x,y = y,x  </div><div class="line">  </div><div class="line"><span class="comment">#文件的读写  </span></div><div class="line"><span class="comment">#由于文件读写时都有可能产生IOError，一旦出错，后面的f.close()就不会调用。所以，为了保证无论是否出错都能正确地关闭文件，我们可以使用try ... finally来实现：  </span></div><div class="line"><span class="string">'''''r、w、a为打开文件的基本模式，对应着只读、只写、追加模式； </span></div><div class="line">b、t、+、U这四个字符，与以上的文件打开模式组合使用，二进制模式，文本模式，读写模式、通用换行符，根据实际情况组合使用'''  </div><div class="line"><span class="keyword">try</span>:  </div><div class="line">    f = open(<span class="string">'test.txt'</span>, <span class="string">'r'</span>)  </div><div class="line">    print(f.read())  </div><div class="line"><span class="keyword">finally</span>:  </div><div class="line">    <span class="keyword">if</span> f:  </div><div class="line">        f.close()  </div><div class="line"><span class="comment">#Python引入了with语句来自动帮我们调用close()方法  </span></div><div class="line"><span class="comment"># 写文件  </span></div><div class="line"><span class="keyword">with</span> open(<span class="string">"test.txt"</span>, <span class="string">"wt"</span>) <span class="keyword">as</span> out_file:  </div><div class="line">    out_file.write(<span class="string">"写入到文件中\n换行了"</span>)  </div><div class="line">  </div><div class="line"><span class="comment"># 读文件  </span></div><div class="line"><span class="keyword">with</span> open(<span class="string">"test.txt"</span>, <span class="string">"rt"</span>) <span class="keyword">as</span> in_file:  </div><div class="line">    text = in_file.read()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python3学习笔记–基础知识&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://cokernut.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://cokernut.top/tags/Python/"/>
    
      <category term="Python3" scheme="http://cokernut.top/tags/Python3/"/>
    
  </entry>
  
  <entry>
    <title>Git命令</title>
    <link href="http://cokernut.top/2016/09/29/Note/Git%E5%91%BD%E4%BB%A4/"/>
    <id>http://cokernut.top/2016/09/29/Note/Git命令/</id>
    <published>2016-09-28T16:00:00.000Z</published>
    <updated>2016-11-28T09:53:28.106Z</updated>
    
    <content type="html"><![CDATA[<p>Git命令<br><a id="more"></a></p>
<h1 id="git知识点"><a href="#git知识点" class="headerlink" title="git知识点"></a>git知识点</h1><h2 id="create-a-new-repository-on-the-command-line"><a href="#create-a-new-repository-on-the-command-line" class="headerlink" title="create a new repository on the command line"></a>create a new repository on the command line</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">echo &quot;# Documents&quot; &gt;&gt; README.md</div><div class="line">git init</div><div class="line">git add README.md</div><div class="line">git commit -m &quot;first commit&quot;</div><div class="line">git remote add origin https://github.com/cokernut/Documents.git</div><div class="line">git push -u origin master</div><div class="line">…or push an existing repository from the command line</div><div class="line"></div><div class="line">git remote add origin https://github.com/cokernut/Documents.git</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<h2 id="Git常用命令备忘"><a href="#Git常用命令备忘" class="headerlink" title="Git常用命令备忘"></a>Git常用命令备忘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Git配置</div><div class="line">git config --global user.name &quot;robbin&quot;   </div><div class="line">git config --global user.email &quot;fankai@gmail.com&quot;</div><div class="line">git config --global color.ui true</div><div class="line">git config --global alias.co checkout</div><div class="line">git config --global alias.ci commit</div><div class="line">git config --global alias.st status</div><div class="line">git config --global alias.br branch</div><div class="line">git config --global core.editor &quot;mate -w&quot;    # 设置Editor使用textmate</div><div class="line">git config -l  # 列举所有配置</div><div class="line">用户的git配置文件~/.gitconfig</div></pre></td></tr></table></figure>
<h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line">查看、添加、提交、删除、找回，重置修改文件</div><div class="line"></div><div class="line">git help &lt;command&gt;  # 显示command的help</div><div class="line">git show            # 显示某次提交的内容</div><div class="line">git show $id</div><div class="line"></div><div class="line">git co  -- &lt;file&gt;   # 抛弃工作区修改</div><div class="line">git co  .           # 抛弃工作区修改</div><div class="line"></div><div class="line">git add &lt;file&gt;      # 将工作文件修改提交到本地暂存区</div><div class="line">git add .           # 将所有修改过的工作文件提交暂存区</div><div class="line"></div><div class="line">git rm &lt;file&gt;       # 从版本库中删除文件</div><div class="line">git rm &lt;file&gt; --cached  # 从版本库中删除文件，但不删除文件</div><div class="line"></div><div class="line">git reset &lt;file&gt;    # 从暂存区恢复到工作文件</div><div class="line">git reset -- .      # 从暂存区恢复到工作文件</div><div class="line">git reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</div><div class="line"></div><div class="line">git ci &lt;file&gt;</div><div class="line">git ci .</div><div class="line">git ci -a           # 将git add, git rm和git ci等操作都合并在一起做</div><div class="line">git ci -am &quot;some comments&quot;</div><div class="line">git ci --amend      # 修改最后一次提交记录</div><div class="line"></div><div class="line">git revert &lt;$id&gt;    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</div><div class="line">git revert HEAD     # 恢复最后一次提交的状态</div><div class="line">查看文件diff</div><div class="line"></div><div class="line">git diff &lt;file&gt;     # 比较当前文件和暂存区文件差异</div><div class="line">git diff</div><div class="line">git diff &lt;$id1&gt; &lt;$id2&gt;   # 比较两次提交之间的差异</div><div class="line">git diff &lt;branch1&gt;..&lt;branch2&gt; # 在两个分支之间比较 </div><div class="line">git diff --staged   # 比较暂存区和版本库差异</div><div class="line">git diff --cached   # 比较暂存区和版本库差异</div><div class="line">git diff --stat     # 仅仅比较统计信息</div><div class="line">查看提交记录</div><div class="line"></div><div class="line">git log</div><div class="line">git log &lt;file&gt;      # 查看该文件每次提交记录</div><div class="line">git log -p &lt;file&gt;   # 查看每次详细修改内容的diff</div><div class="line">git log -p -2       # 查看最近两次详细修改内容的diff</div><div class="line">git log --stat      # 查看提交统计信息</div><div class="line">tig</div><div class="line"></div><div class="line">Mac上可以使用tig代替diff和log，brew install tig</div><div class="line"></div><div class="line">Git 本地分支管理</div><div class="line">查看、切换、创建和删除分支</div><div class="line"></div><div class="line">git br -r           # 查看远程分支</div><div class="line">git br &lt;new_branch&gt; # 创建新的分支</div><div class="line">git br -v           # 查看各个分支最后提交信息</div><div class="line">git br --merged     # 查看已经被合并到当前分支的分支</div><div class="line">git br --no-merged  # 查看尚未被合并到当前分支的分支</div><div class="line"></div><div class="line">git co &lt;branch&gt;     # 切换到某个分支</div><div class="line">git co -b &lt;new_branch&gt; # 创建新的分支，并且切换过去</div><div class="line">git co -b &lt;new_branch&gt; &lt;branch&gt;  # 基于branch创建新的new_branch</div><div class="line"></div><div class="line">git co $id          # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</div><div class="line">git co $id -b &lt;new_branch&gt;  # 把某次历史提交记录checkout出来，创建成一个分支</div><div class="line"></div><div class="line">git br -d &lt;branch&gt;  # 删除某个分支</div><div class="line">git br -D &lt;branch&gt;  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</div><div class="line">分支合并和rebase</div><div class="line"></div><div class="line">git merge &lt;branch&gt;               # 将branch分支合并到当前分支</div><div class="line">git merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交</div><div class="line"></div><div class="line">git rebase master &lt;branch&gt;       # 将master rebase到branch，相当于：</div><div class="line">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</div><div class="line">Git补丁管理(方便在多台机器上开发同步时用)</div><div class="line">git diff &gt; ../sync.patch         # 生成补丁</div><div class="line">git apply ../sync.patch          # 打补丁</div><div class="line">git apply --check ../sync.patch  # 测试补丁能否成功</div><div class="line">Git暂存管理</div><div class="line">git stash                        # 暂存</div><div class="line">git stash list                   # 列所有stash</div><div class="line">git stash apply                  # 恢复暂存的内容</div><div class="line">git stash drop                   # 删除暂存区</div><div class="line">Git远程分支管理</div><div class="line">git pull                         # 抓取远程仓库所有分支更新并合并到本地</div><div class="line">git pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并</div><div class="line">git fetch origin                 # 抓取远程仓库更新</div><div class="line">git merge origin/master          # 将远程主分支合并到本地当前分支</div><div class="line">git co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支</div><div class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  # 基于远程分支创建本地分支，功能同上</div><div class="line"></div><div class="line">git push                         # push所有分支</div><div class="line">git push origin master           # 将本地主分支推到远程主分支</div><div class="line">git push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</div><div class="line">git push origin &lt;local_branch&gt;   # 创建远程分支， origin是远程仓库名</div><div class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  # 创建远程分支</div><div class="line">git push origin :&lt;remote_branch&gt;  #先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</div><div class="line">Git远程仓库管理</div><div class="line">git remote -v                    # 查看远程服务器地址和仓库名称</div><div class="line">git remote show origin           # 查看远程服务器仓库状态</div><div class="line">git remote add origin git@github:robbin/robbin_site.git         # 添加远程仓库地址</div><div class="line">git remote set-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址)</div><div class="line">git remote rm &lt;repository&gt;       # 删除远程仓库</div><div class="line">创建远程仓库</div><div class="line"></div><div class="line">git clone --bare robbin_site robbin_site.git  # 用带版本的项目创建纯版本仓库</div><div class="line">scp -r my_project.git git@git.csdn.net:~      # 将纯仓库上传到服务器上</div><div class="line"></div><div class="line">mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init # 在服务器创建纯仓库</div><div class="line">git remote add origin git@github.com:robbin/robbin_site.git    # 设置远程仓库地址</div><div class="line">git push -u origin master                                      # 客户端首次提交</div><div class="line">git push -u origin develop  # 首次将本地develop分支提交到远程develop分支，并且track</div><div class="line"></div><div class="line">git remote set-head origin master   # 设置远程仓库的HEAD指向master分支</div><div class="line">也可以命令设置跟踪远程库和本地库</div><div class="line"></div><div class="line">git branch --set-upstream master origin/master</div><div class="line">git branch --set-upstream develop origin/develop</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git命令&lt;br&gt;
    
    </summary>
    
      <category term="Git" scheme="http://cokernut.top/categories/Git/"/>
    
    
      <category term="GitHub" scheme="http://cokernut.top/tags/GitHub/"/>
    
      <category term="Git" scheme="http://cokernut.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown基础语法学习与练习</title>
    <link href="http://cokernut.top/2016/09/18/Note/MarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://cokernut.top/2016/09/18/Note/MarkDown语法/</id>
    <published>2016-09-17T16:00:00.000Z</published>
    <updated>2016-11-28T09:54:22.641Z</updated>
    
    <content type="html"><![CDATA[<p>MarkDown基础语法学习与练习<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>如果你只想高亮语句中的某个函数名或关键字，可以使用 <code>function_name()</code> 实现</p>
<p>通常编辑器根据代码片段适配合适的高亮方法，但你也可以用 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    alert(<span class="string">'hello world'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">支持的语言：actionscript, apache, bash, clojure, cmake, coffeescript, cpp, cs, css, d, delphi, django, erlang, go, haskell, html, http, ini, java, javascript, json, lisp, lua, markdown, matlab, nginx, objectivec, perl, php, python, r, ruby, scala, smalltalk, sql, tex, vbscript, xml</div><div class="line"></div><div class="line">也可以使用 4 空格缩进，再贴上代码，实现相同的的效果</div></pre></td></tr></table></figure>
<pre><code>def g(x):
    yield from range(x, 0, -1)
yield from range(x)
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 标题</div><div class="line"></div><div class="line">文章内容较多时，可以用标题分段：</div></pre></td></tr></table></figure>
<h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h2 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h2><h3 id="小标题"><a href="#小标题" class="headerlink" title="小标题"></a>小标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## 粗斜体</div></pre></td></tr></table></figure>
<p><em>斜体文本</em>    <em>斜体文本</em><br><strong>粗体文本</strong>    <strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong>    <strong><em>粗斜体文本</em></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 字体大小、颜色</div></pre></td></tr></table></figure></p>
<font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="7" face="黑体">color=#0099ff size=72 face=”黑体”</font><br><font color="#00ffff" size="72">color=#00ffff</font><br><font color="gray" size="72">color=gray</font>

<p><small>字体变小</small></p>
<p><big>字体变大</big><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 链接</div><div class="line"></div><div class="line">常用链接方法</div></pre></td></tr></table></figure></p>
<p>文字链接 <a href="http://链接网址" target="_blank" rel="external">链接名称</a><br>网址链接 <a href="http://链接网址" target="_blank" rel="external">http://链接网址</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">高级链接技巧</div></pre></td></tr></table></figure></p>
<p>这个链接用 1 作为网址变量 <a href="http://www.google.com/logo.png" target="_blank" rel="external">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.yahoo.com/" target="_blank" rel="external">Yahoo!</a>.<br>然后在文档的结尾为变量赋值（网址）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 列表</div><div class="line"></div><div class="line">普通无序列表</div></pre></td></tr></table></figure>
<ul>
<li>列表文本前使用 [减号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [加号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [星号+空格]<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">普通有序列表</div></pre></td></tr></table></figure>
</li>
</ul>
<ol>
<li>列表前使用 [数字+空格]</li>
<li>我们会自动帮你添加数字</li>
<li><p>不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">列表嵌套</div></pre></td></tr></table></figure>
</li>
<li><p>列出所有元素：</p>
<ul>
<li>无序列表元素 A<ol>
<li>元素 A 的有序子列表</li>
</ol>
</li>
<li>前面加四个空格</li>
</ul>
</li>
<li>列表里的多段换行：<br> 前面必须加四个空格，<br> 这样换行，整体的格式不会乱</li>
<li><p>列表里引用：</p>
<blockquote>
<p>前面空一行<br>仍然需要在 &gt;  前面加四个空格</p>
</blockquote>
</li>
<li><p>列表里代码段：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">前面四个空格，之后按代码语法 ``` 书写</div></pre></td></tr></table></figure>
<pre><code>或者直接空八个，引入代码块
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 分割线</div><div class="line">使用 --- 或者 *** 或者 * * * 表示水平分割线。</div><div class="line"></div><div class="line">## 次常用标记</div><div class="line">使用 标签: 或者 Tags: 表示标签标记。</div><div class="line">### 删除线</div><div class="line">使用 ~~ 表示删除线。</div></pre></td></tr></table></figure>
</li>
</ol>
<p><del>这是一条删除线</del><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1.注意 ~~ 和 要添加删除线的文字之间不能有空格。</div><div class="line">2.我常使用在显示的告诉自己这行文字是要删除的。</div><div class="line">### 注脚</div><div class="line">使用 [^footer] 表示注脚。</div></pre></td></tr></table></figure></p>
<p>这是一个注脚测试<a href="这是一个测试，用来阐释注脚。">^footer1</a>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 不常用标记</div><div class="line">### 实现页内跳转</div><div class="line">使用html代码实现页内跳转。在要跳转到的位置定义个锚 &lt;span id = &quot;jump&quot;&gt;hehe&lt;/span&gt; ，然后使用 [你好](#jump) 将 你好 设置为一单击即跳转到 hehe 所在位置的效果。</div></pre></td></tr></table></figure>
<p><a href="#jump">你好</a><br><span id="jump">hehe</span><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 表格</div><div class="line"></div><div class="line">具体使用方式请看示例。</div></pre></td></tr></table></figure></p>
<p>——: 为右对齐。<br>:—— 为左对齐。<br>:——: 为居中对齐。<br>——- 为使用默认居中对齐。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">示例</div><div class="line">|         序号    |    交易名    |    交易说明    |    备注    |</div><div class="line">|    ------: |    :-------:    |    :---------   |    ------    |</div><div class="line">|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |</div><div class="line">|    2    |    gentmo    |    编译所有交易    |    |</div><div class="line">|    100000    |    sysdba    |    数据库表模型汇总    |    |</div><div class="line"> 	</div><div class="line">### 注意</div><div class="line">每个Markdown解析器都不一样，可能左右居中对齐方式的表示方式不一样。</div><div class="line"></div><div class="line">## 引用</div><div class="line"></div><div class="line">普通引用</div></pre></td></tr></table></figure></p>
<blockquote>
<p>引用文本前使用 [大于号+空格]<br>折行可以不加，新起一行都要加上哦<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">引用里嵌套引用</div></pre></td></tr></table></figure></p>
<p>最外层引用</p>
<blockquote>
<p>多一个 &gt; 嵌套一层引用</p>
<blockquote>
<p>可以嵌套很多层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">引用里嵌套列表</div></pre></td></tr></table></figure></p>
</blockquote>
</blockquote>
<ul>
<li>这是引用里嵌套的一个列表</li>
<li><p>还可以有子列表</p>
<ul>
<li><p>子列表需要从 - 之后延后四个空格开始</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">引用里嵌套代码块</div></pre></td></tr></table></figure>
<p>同样的，在前面加四个空格形成代码块</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; 或者使用 ``` 形成代码块</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">## 图片</div><div class="line"></div><div class="line">跟链接的方法区别在于前面加了个感叹号 !，这样是不是觉得好记多了呢？</div></pre></td></tr></table></figure>
<p><img src="http://图片网址" alt="图片名称"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当然，你也可以像网址那样对图片网址使用变量</div></pre></td></tr></table></figure></p>
<p>这个链接用 1 作为网址变量 <a href="http://www.google.com/logo.png" target="_blank" rel="external">Google</a>.<br>然后在文档的结尾位变量赋值（网址）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">也可以使用 HTML 的图片语法来自定义图片的宽高大小</div></pre></td></tr></table></figure>
<p><img src="htt://example.com/sample.png" alt="alt" title="title" width="400" height="100"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">## 换行</div><div class="line"></div><div class="line">如果另起一行，只需在当前行结尾加 2 个空格</div></pre></td></tr></table></figure></p>
<p>在当前行的结尾加 2 个空格<br>这行就会新起一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">如果是要起一个新段落，只需要空出一行即可。</div><div class="line"></div><div class="line">## 分隔符</div><div class="line"></div><div class="line">如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：</div></pre></td></tr></table></figure></p>
<p>前面的段落</p>
<hr>
<p>后面的段落<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 高级技巧</div><div class="line">行内 HTML 元素</div><div class="line"></div><div class="line">目前只支持部分段内 HTML 元素效果，包括 ```&lt;kdb&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</div></pre></td></tr></table></figure></p>
<p>如 : 键位显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用 &lt;kbd&gt;Ctrl&lt;kbd&gt;+&lt;kbd&gt;Alt&lt;kbd&gt;+&lt;kbd&gt;Del&lt;kbd&gt; 重启电脑</div></pre></td></tr></table></figure></p>
<p>代码块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用 &lt;pre&gt;&lt;/pre&gt; 元素同样可以形成代码块</div></pre></td></tr></table></figure></p>
<p>粗斜体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;b&gt; Markdown 在此处同样适用，如 *加粗* &lt;/b&gt;</div></pre></td></tr></table></figure></p>
<h2 id="符号转义"><a href="#符号转义" class="headerlink" title="符号转义"></a>符号转义</h2><p>如果你的描述中需要用到 markdown 的符号，比如 <em> # * 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 \</em> # * 进行避免。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">\_不想这里的文本变斜体\_</div><div class="line">\*\*不想这里的文本被加粗\*\*</div></pre></td></tr></table></figure></p>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>支持 jsfiddle、gist、runjs、优酷视频，直接填写 url，在其之后会自动添加预览点击会展开相关内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">http://&#123;url_of_the_fiddle&#125;/embedded/[&#123;tabs&#125;/[&#123;style&#125;]]/</div><div class="line">https://gist.github.com/&#123;gist_id&#125;</div><div class="line">http://runjs.cn/detail/&#123;id&#125;</div><div class="line">http://v.youku.com/v_show/id_&#123;video_id&#125;.html</div></pre></td></tr></table></figure></p>
<h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$$ x = &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;. $$</div><div class="line"></div><div class="line">$$</div><div class="line">x \href&#123;why-equal.html&#125;&#123;=&#125; y^2 + 1</div><div class="line">$$</div></pre></td></tr></table></figure></p>
<p>同时也支持 HTML 属性，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$$ (x+1)^2 = \class&#123;hidden&#125;&#123;(x+1)(x+1)&#125; $$</div><div class="line"></div><div class="line">$$</div><div class="line">(x+1)^2 = \cssId&#123;step1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</div><div class="line">$$</div></pre></td></tr></table></figure></p>
<h1 id="MarkDown练习"><a href="#MarkDown练习" class="headerlink" title="MarkDown练习"></a>MarkDown练习</h1><h1 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h1><h2 id="头部-1"><a href="#头部-1" class="headerlink" title="头部"></a>头部</h2><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul>
<li>Candy.</li>
<li>Gum.</li>
<li>Booze.</li>
</ul>
<ul>
<li>Candy.</li>
<li>Gum.</li>
<li>Booze</li>
</ul>
<ul>
<li>Candy.</li>
<li>Gum.</li>
<li>Booze.</li>
</ul>
<ol>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ol>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<h2 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h2><h3 id="不指定语言"><a href="#不指定语言" class="headerlink" title="不指定语言"></a>不指定语言</h3><p><code>java code</code></p>
<h3 id="指定语言"><a href="#指定语言" class="headerlink" title="指定语言"></a>指定语言</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    alert(<span class="string">'hello world'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="&quot;www.baidu.com&quot;">baidu</a></p>
<p><a href="http://www.baidu.com/" target="_blank" rel="external">http://www.baidu.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">常用链接方法</div><div class="line"></div><div class="line">文字链接 [链接名称](http://链接网址)</div><div class="line">网址链接 &lt;http://链接网址&gt;</div><div class="line">高级链接技巧</div><div class="line"></div><div class="line">这个链接用 1 作为网址变量 [Google][1].</div><div class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</div><div class="line">然后在文档的结尾为变量赋值（网址）</div><div class="line"></div><div class="line">[1]: http://www.google.com/</div><div class="line">[yahoo]: http://www.yahoo.com/</div></pre></td></tr></table></figure></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="http://www.86ps.com/uploadfiles/jpg/2011-11/2011111414003220188.jpg" alt="alt text" title="Title"><br><img src="http://www.86ps.com/uploadfiles/jpg/2011-11/2011111414003220188.jpg" width="40%"><br><img src="http://img2.3lian.com/2014/c7/12/d/77.jpg" alt="图片名称" title="风景" width="256" height="256"></p>
<blockquote>
<p>引用</p>
</blockquote>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><em>斜体文本</em>    <em>斜体文本</em></p>
<p><strong>粗体文本</strong>    <strong>粗体文本</strong></p>
<p><strong><em>粗斜体文本</em></strong>    <strong><em>粗斜体文本</em></strong></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>dog</th>
<th>bird</th>
<th>cat</th>
</tr>
</thead>
<tbody>
<tr>
<td>foo</td>
<td>foo</td>
<td>foo</td>
</tr>
<tr>
<td>bar</td>
<td>bar</td>
<td>bar</td>
</tr>
<tr>
<td>baz</td>
<td>baz</td>
<td>baz</td>
</tr>
</tbody>
</table>
<h2 id="反斜杠转义"><a href="#反斜杠转义" class="headerlink" title="反斜杠转义"></a>反斜杠转义</h2><p>*literal asterisks*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</div><div class="line">\   反斜线</div><div class="line">`   反引号</div><div class="line">*   星号</div><div class="line">_   底线</div><div class="line">&#123;&#125;  花括号</div><div class="line">[]  方括号</div><div class="line">()  括弧</div><div class="line">#   井字号</div><div class="line">+   加号</div><div class="line">-   减号</div><div class="line">.   英文句点</div><div class="line">!   惊叹号</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MarkDown基础语法学习与练习&lt;br&gt;
    
    </summary>
    
      <category term="MarkDown" scheme="http://cokernut.top/categories/MarkDown/"/>
    
    
      <category term="MarkDown" scheme="http://cokernut.top/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>使用Pelican+GitHub Pages搭建静态博客</title>
    <link href="http://cokernut.top/2016/09/09/Note/%E4%BD%BF%E7%94%A8Pelican+GitHub%20Pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>http://cokernut.top/2016/09/09/Note/使用Pelican+GitHub Pages搭建静态博客/</id>
    <published>2016-09-08T16:00:00.000Z</published>
    <updated>2016-11-28T09:59:34.363Z</updated>
    
    <content type="html"><![CDATA[<p>使用Pelican+GitHub Pages搭建静态博客<br><a id="more"></a></p>
<h2 id="Pelican介绍"><a href="#Pelican介绍" class="headerlink" title="Pelican介绍"></a>Pelican介绍</h2><p>什么是Pelican</p>
<p>Perlican 是用Python实现的一个静态网站生成器，支持 reStructuredText 或 Markdown 。它支持以下功能：</p>
<ul>
<li>博客文章和静态网页</li>
<li>支持评论。评论是通过第三方服务 Disqus 支持的。即评论数据保存在第三方服务器上</li>
<li>主题支持</li>
<li>把博客文章生成PDF格式文档</li>
<li>多语言博客支持，如可以用英文和中文写同一篇博客。不同语言访问者访问相应语言的博文</li>
<li>支持Atom/RSS订阅</li>
<li>博文中代码高亮支持</li>
<li>博客搬家支持(WordPress, Dotclear, 或RSS feeds)</li>
<li>支持插件，如Twiter, Google Analytics等</li>
</ul>
<h2 id="为什么选择Pelican"><a href="#为什么选择Pelican" class="headerlink" title="为什么选择Pelican"></a>为什么选择Pelican</h2><p>首先排除掉WordPress之类的CMS系统。因为我不想要数据库，我只需要一个轻量级的静态网站生成器。我的博客使用Markdown编写，且保存在GitHub上。我想要的，只是用Markdown写完博客之后，git commit + git push即可直接发布到博客网站上。</p>
<p>选择Pelican是基于如下原因：<br>使用Python实现。由于最近在学习Python，我可以阅读源码并按照我的需求来改造Pelican使之完全符合我的需求。下次学习Ruby，用 jekyll 再折腾一遍。因为Jekyll是用Ruby实现的。且GitHub Pages的后台就是用Jekyll，到时可直接用GitHub Pages实现个人博客。<br>足够轻量级。总的代码量才1MB多。安装也方便。<br>有一堆现成的主题可以使用。这对我这种非专业前端的开发者来说，省了不少事。<br>文档齐全。<br>开发活动活跃。GitHub上代码提交活跃。上面文章里介绍的很多博客系统基本上都2+年前就停止更新了。<br>最后两点对使用任何开源工具来说都是很重要的，只有开发活跃，社区资源多，文档齐全，遇到问题的时候才能较快地得到解决。</p>
<h2 id="Pelican安装与配置"><a href="#Pelican安装与配置" class="headerlink" title="Pelican安装与配置"></a>Pelican安装与配置</h2><p>安装Pelican并创建项目</p>
<p>详细的信息可以参阅 Pelican官方文档 。假设电脑上已经安装Python和pip。首先，通过pip安装pelican和markdown：</p>
<p>pip install pelican markdown<br>然后创建你的博客项目：</p>
<p>mkdir ~/blogs<br>cd ~/blogs<br>pelican-quickstart<br>在运行pelican-quickstart时，系统会问一系列问题，比如你的博客网址啊，作者名字啊之类的，根据真实情况填写即可，这些问题只是用来生成配置文件的，我们后面都可以通过修改配置文件来手动修改这些设置。我填写的内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">Cokernut@Cokernut-laptop:~/lab/blogs$ pelican-quickstart</div><div class="line">Welcome to pelican-quickstart v3.4.0.</div><div class="line"></div><div class="line">This script will help you create a new Pelican-based website.</div><div class="line"></div><div class="line">Please answer the following questions so this script can generate the files</div><div class="line">needed by Pelican.</div><div class="line"></div><div class="line">&gt; Where do you want to create your new web site? [.]</div><div class="line">&gt; What will be the title of this web site? Cokernut</div><div class="line">&gt; Who will be the author of this web site? Cokernut</div><div class="line">&gt; What will be the default language of this web site? [en]</div><div class="line">&gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)</div><div class="line">&gt; What is your URL prefix? (see above example; no trailing slash) http://cokernut.top</div><div class="line">&gt; Do you want to enable article pagination? (Y/n) Y</div><div class="line">&gt; How many articles per page do you want? [10]</div><div class="line">&gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) Y</div><div class="line">&gt; Do you want an auto-reload &amp; simpleHTTP script to assist with theme and site development? (Y/n)</div><div class="line">&gt; Do you want to upload your website using FTP? (y/N) N</div><div class="line">&gt; Do you want to upload your website using SSH? (y/N) y</div><div class="line">&gt; What is the hostname of your SSH server? [localhost]/cokernut.top</div><div class="line">&gt; What is the port of your SSH server? [22]</div><div class="line">&gt; What is your username on that server? [root] file</div><div class="line">&gt; Where do you want to put your web site on that server? [/var/www] /home/file/blogs</div><div class="line">&gt; Do you want to upload your website using Dropbox? (y/N) N</div><div class="line">&gt; Do you want to upload your website using S3? (y/N) N</div><div class="line">&gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) N</div><div class="line">&gt; Do you want to upload your website using GitHub Pages? (y/N) N</div><div class="line">Done. Your new project is available at /home/Cokernut/blogs</div></pre></td></tr></table></figure></p>
<p>其中第14行的 <a href="http://cokernut.top">http://cokernut.top</a> 以及第21行的cokernut.top 是我的域名，如果你只是在本机试验，可以填localhost。创建完项目后，目录下看起来象这样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Cokernut@Cokernut-laptop:~/lab/blogs$ tree</div><div class="line">.</div><div class="line">├── content     # 这个就是放博客内容目录，这个目录及子目录下的所有md和rst文件将会被转成html文件</div><div class="line">├── develop_server.sh   #这个是用来在本地运行一个服务器来实时查看生成的html文档的脚本</div><div class="line">├── fabfile.py  # 这个是使用Python的fabric来实现文件上传的工具，即Deploy工具</div><div class="line">├── Makefile    # 这个是使用是用来生成网站内容并上传的工具。后文详细解释</div><div class="line">├── output      # 这个是从content目录生成的html目标文件的存放目录</div><div class="line">├── pelicanconf.py      # 这个是本地开发时的配置文件</div><div class="line">└── publishconf.py      # 这个是发布时的配置文件</div></pre></td></tr></table></figure></p>
<p>2 directories, 5 files<br>配置pelicanconf.py和publishconf.py</p>
<p>Pelican的配置文件是直接用Python写的，我本地开发配置文件 pelicanconf.py 内容如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*- #</span></div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</div><div class="line">AUTHOR = <span class="string">u'Cokernut'</span></div><div class="line">SITENAME = <span class="string">u"cokernut.top"</span></div><div class="line">SITEURL = <span class="string">'http://localhost'</span></div><div class="line">DISQUS_SITENAME = <span class="string">'Cokernut'</span></div><div class="line">PATH = <span class="string">'content'</span></div><div class="line">TIMEZONE = <span class="string">'Asia/Shanghai'</span></div><div class="line">DEFAULT_LANG = <span class="string">u'zh_CN'</span></div><div class="line">DEFAULT_DATE_FORMAT = (<span class="string">'%Y-%m-%d(%A) %H:%M'</span>)</div><div class="line">USE_FOLDER_AS_CATEGORY = <span class="keyword">True</span></div><div class="line">DEFAULT_CATEGORY = <span class="string">'hide'</span></div><div class="line"><span class="comment"># Feed generation is usually not desired when developing</span></div><div class="line">FEED_ATOM = <span class="string">'feeds/atom.xml'</span></div><div class="line">FEED_RSS = <span class="string">'feeds/rss.xml'</span></div><div class="line">FEED_ALL_ATOM = <span class="keyword">None</span></div><div class="line">FEED_ALL_RSS = <span class="keyword">None</span></div><div class="line">CATEGORY_FEED_ATOM = <span class="keyword">None</span></div><div class="line">TRANSLATION_FEED_ATOM = <span class="keyword">None</span></div><div class="line"><span class="comment"># menu items</span></div><div class="line">MENUITEMS = [(<span class="string">'Home'</span>, SITEURL),</div><div class="line">      (<span class="string">'About'</span>, <span class="string">'about.html'</span>),]</div><div class="line">DEFAULT_PAGINATION = <span class="number">10</span></div><div class="line">MD_EXTENSIONS = [</div><div class="line">  <span class="string">"extra"</span>,</div><div class="line">  <span class="string">"toc"</span>,</div><div class="line">  <span class="string">"headerid"</span>,</div><div class="line">  <span class="string">"meta"</span>,</div><div class="line">  <span class="string">"sane_lists"</span>,</div><div class="line">  <span class="string">"smarty"</span>,</div><div class="line">  <span class="string">"wikilinks"</span>,</div><div class="line">  <span class="string">"admonition"</span>,</div><div class="line">  <span class="string">"codehilite(guess_lang=False,pygments_style=emacs,noclasses=True)"</span>]</div><div class="line">CNZZ_ANALYTICS = <span class="keyword">True</span></div><div class="line">MONTH_ARCHIVE_SAVE_AS = <span class="string">'posts/&#123;date:%Y&#125;/&#123;date:%m&#125;/index.html'</span></div><div class="line">THEME = <span class="string">"themes/foundation-default-colours"</span></div></pre></td></tr></table></figure></p>
<p>第6行的SITENAME是博客网站的名称，可以是任何字符；第7行是博客网站的网址，这个字段在本地开发和发布版本是不一样的，本地直接填localhost即可，发布版本里需要填博客网址。<br>第8行：我使用了Disqus作为我的评论系统，Disqus也是 YC 毕业生。启用Disqus评论系统非常简单，在官网上注册一个Disqus帐户，然后把帐户名填在 DISQUS_SITENAME 值里即可启用。我的Disqus帐号刚好也是 Cokernut 。<br>第33－42行：这里是配置Markdown扩展，用来支持代码高亮。并且使用Emacs风格的代码高亮。<br>第44行：由于GFW的存在，我把Google Analize换成了国内的CNZZ统计。<br>第46行：我的博客使用了 foundation-default-colours 这套主题。关于主题，后文详解。<br>开发环境和发布环境的配置差不多，除SITEURL不一样外，还多了两个配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SITEURL = &apos;http://cokernut.top&apos;</div><div class="line"># usful setting for publish</div><div class="line">RELATIVE_URLS = False   # 禁用相对路径引用</div><div class="line">DELETE_OUTPUT_DIRECTORY = True      # 编译之前删除output目录，这样保证output下生成的内容是干净的</div><div class="line">其它的配置项，可以参阅 Pelican设置文档 。</div></pre></td></tr></table></figure></p>
<h3 id="配置Makefile"><a href="#配置Makefile" class="headerlink" title="配置Makefile"></a>配置Makefile</h3><p>撰写完博客，并在本地预览后，需要发布到服务器上。我使用Makefile的形式来生成文档并发布。我的Makefile核心代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#!/makefile</div><div class="line">SSH_HOST/cokernut.top</div><div class="line">SSH_PORT=22</div><div class="line">SSH_USER=ubuntu</div><div class="line">SSH_TARGET_DIR=/home/ubuntu/blogs/</div><div class="line">SSH_KEY=/home/Cokernut/work/aws/Cokernut-key-tokyo.pem</div><div class="line"></div><div class="line">rsync_upload: publish</div><div class="line">    rsync -e &quot;ssh -p $(SSH_PORT) -i $(SSH_KEY)&quot; -P -rvzc --delete $(OUTPUTDIR)/ $(SSH_USER)@$(SSH_HOST):$(SSH_TARGET_DIR) --cvs-exclude</div></pre></td></tr></table></figure></p>
<p>第2－4行：指定了要上传内容的目的服务器的地址，端口以及用户名<br>第5行：指定了远程服务器上保存博客内容的目录<br>第6行：我添加的SSH Identity文件路径。这是因为Amazon EC2登录时我是用SSH Identity文件登录的，而不是使用用户名和密码<br>第8-9行：我使用rsync来进行上传操作。rsync可以在本地和远程服务器之间同步文件。同步过程中只同步那些改变了的文件，且传输过程中会压缩数据，它比scp要所需要的带宽要小。这里要注意的是，我在默认生成的Makefile上增加了 -i $(SSH_KEY) ，这个就是指定SSH Identity文件登录远程SSH的方法。</p>
<h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>Pelican支持大量的开源主题，GitHub上的 pelican-themes 项目有几十套主题，大部分都带了效果预览图。可以从里面挑一个你喜欢的主题样式来使用。还有一个更方便的挑选主题的方式，直接打开 www.pelicanthemes.com 挑选吧。一个网页里就列出了几乎所有的主题。我的博客是使用 foundation-default-colours 主题，并在这套主题的基础上进行了一些定制。选定好喜欢的主题后，从GitHub上下载下来所有的主题：</p>
<p>mkdir ~/pelican<br>cd ~/pelican<br>git clone <a href="https://github.com/getpelican/pelican-themes.git" target="_blank" rel="external">https://github.com/getpelican/pelican-themes.git</a><br>从里面拷贝一份你选中的主题到项目根目录的 themes 目录下，在本文的例子中是 ~/lab/blogs/themes 。然后在 pelicanconf.py 和 publishconf.py 里通过下面代码指定博客主题：</p>
<p>THEME = “themes/foundation-default-colours”<br>通常的做法是，选中一个自己喜欢的主题后，会进行一些定制。Pelican使用 Jinja2 来配置主题。一个主题的典型结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">├── static</div><div class="line">│   ├── css</div><div class="line">│   └── images</div><div class="line">└── templates</div><div class="line">  ├── analytics_cnzz.html // 这个是我添加的使用cnzz的统计服务的代码</div><div class="line">  ├── analytics.html    // 这是Google Analytics的代码</div><div class="line">  ├── archives.html      // 这个是博客归档页面的模板</div><div class="line">  ├── article.html        // 这个是博客正文的显示模板</div><div class="line">  ├── base.html          // 这个是所有页面的父类模板，即所有页面都引用这个页面。比如网页导航栏啊之类的，都定义在这里</div><div class="line">  ├── categories.html  // 所有博客文章的分类列表</div><div class="line">  ├── category.html      // 某个博客分类的文章列表模板</div><div class="line">  ├── index.html        // 主页</div><div class="line">  ├── page.html          // 分页显示的模板</div><div class="line">  ├── tag.html            // 某类标签下的文章列表</div><div class="line">  └── tags.html          // 所有的标签列表页面模板</div></pre></td></tr></table></figure></p>
<p>稍微有点Jinja的知识加上一些HTML和CSS的知识，就可以自己定义主题了。</p>
<p>为什么博客主页打开半天都不显示出来</p>
<p>因为GFW封锁了几乎所有和Google相关的网站，这些主题里又用了Google的字体，所以下载这些字体时会导致无法下载成功而半天不显示网页。解决方案很简单，直接修改css文件，不去下载Google字体即可。比如针对 foundation-default-colours 主题，打开主题根目录下的 static/css/foundation.css 和 static/css/foundation.min.css 文件，删除掉 @import url(“//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700italic,400,300,700”); 内容即可。当然，如果你和你的读者都是翻墙高手，那就不会遇到这个问题了。</p>
<p>下载风格包pelican-themes与插件包pelican-plugins</p>
<blockquote>
<p>git clone git://github.com/getpelican/pelican-themes.git</p>
<p>git clone git://github.com/getpelican/pelican-plugins.git</p>
</blockquote>
<ol>
<li><p>配置pelicanconf.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*- #</span></div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</div><div class="line"></div><div class="line"><span class="comment"># Site settings</span></div><div class="line">AUTHOR = <span class="string">u'Cokernut'</span></div><div class="line">AUTHOR_EMAIL = <span class="string">u'Cokernut@foxmail.com'</span></div><div class="line">SITENAME = <span class="string">u'Cokernut'</span></div><div class="line">TAGLINE = <span class="string">'Whatever is worth doing is worth doing well.'</span></div><div class="line">SITEURL = <span class="string">'http://Cokernut.github.io'</span></div><div class="line">DEFAULT_DATE_FORMAT = (<span class="string">'%Y-%m-%d'</span>)</div><div class="line"></div><div class="line">TIMEZONE = <span class="string">'Asia/Shanghai'</span></div><div class="line"></div><div class="line">DEFAULT_LANG = <span class="string">u'zh'</span></div><div class="line">DEFAULT_METADATA = (</div><div class="line">)</div><div class="line"></div><div class="line">DELETE_OUTPUT_DIRECTORY = <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="comment"># Blogroll</span></div><div class="line">LINKS = (</div><div class="line">  (<span class="string">'HeyLinux'</span>, <span class="string">'http://heylinux.com'</span>),</div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment"># Social widget</span></div><div class="line">SOCIAL = (</div><div class="line">  (<span class="string">'Github'</span>, <span class="string">'http://github.com/Cokernut/...'</span>),</div><div class="line">  (<span class="string">'Twitter'</span>, <span class="string">'http://twitter.com/...'</span>),</div><div class="line">)</div><div class="line"></div><div class="line">MENUITEMS = (</div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment"># Disqus</span></div><div class="line">DISQUS_SITENAME = <span class="string">u"Cokernut"</span></div><div class="line"></div><div class="line"><span class="comment"># Content path</span></div><div class="line">PATH = <span class="string">'content'</span></div><div class="line">PAGE_PATHS = [<span class="string">'pages'</span>]</div><div class="line">ARTICLE_PATHS = [<span class="string">'articles'</span>]</div><div class="line">STATIC_PATHS = [<span class="string">'images'</span>, <span class="string">'files'</span>]</div><div class="line">EXTRA_PATH_METADATA = &#123;</div><div class="line">  <span class="string">'files/robots.txt'</span>: &#123;<span class="string">'path'</span>: <span class="string">'robots.txt'</span>&#125;,</div><div class="line">  <span class="string">'images/favicon.ico'</span>: &#123;<span class="string">'path'</span>: <span class="string">'favicon.ico'</span>&#125;,</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># URL settings</span></div><div class="line">PAGINATION_PATTERNS = (</div><div class="line">  (<span class="number">1</span>, <span class="string">'&#123;base_name&#125;/'</span>, <span class="string">'&#123;base_name&#125;/index.html'</span>),</div><div class="line">  (<span class="number">2</span>, <span class="string">'&#123;base_name&#125;/page/'</span>, <span class="string">'&#123;base_name&#125;/page/&#123;number&#125;.html'</span>),</div><div class="line">)</div><div class="line">ARTICLE_URL = (<span class="string">'articles/&#123;slug&#125;.html'</span>)</div><div class="line">ARTICLE_SAVE_AS = (<span class="string">'articles/&#123;slug&#125;.html'</span>)</div><div class="line">PAGE_LANG_SAVE_AS = <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="comment"># Feed</span></div><div class="line">FEED_DOMAIN = SITEURL</div><div class="line">FEED_ALL_ATOM = <span class="string">'feeds/all.atom.xml'</span></div><div class="line">CATEGORY_FEED_ATOM = <span class="string">'feeds/%s.atom.xml'</span></div><div class="line">TRANSLATION_FEED_ATOM = <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="comment"># Theme</span></div><div class="line">THEME = <span class="string">'pelican-themes/zurb-F5-basic'</span></div><div class="line">COVER_BG_COLOR = <span class="string">'#375152'</span></div><div class="line">DEFAULT_PAGINATION = <span class="number">10</span></div><div class="line"></div><div class="line"><span class="comment"># Plugin</span></div><div class="line">PLUGIN_PATHS = [<span class="string">'pelican-plugins'</span>]</div><div class="line">PLUGINS = [ <span class="string">'sitemap'</span>, <span class="string">'gravatar'</span> ]</div><div class="line"></div><div class="line"><span class="comment"># Sitemap</span></div><div class="line">SITEMAP = &#123;</div><div class="line">  <span class="string">'format'</span>: <span class="string">'xml'</span>,</div><div class="line">  <span class="string">'priorities'</span>: &#123;</div><div class="line">    <span class="string">'articles'</span>: <span class="number">1</span>,</div><div class="line">    <span class="string">'pages'</span>: <span class="number">0.9</span>,</div><div class="line">    <span class="string">'indexes'</span>: <span class="number">0.8</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="string">'changefreqs'</span>: &#123;</div><div class="line">    <span class="string">'indexes'</span>: <span class="string">'daily'</span>,</div><div class="line">    <span class="string">'articles'</span>: <span class="string">'daily'</span>,</div><div class="line">    <span class="string">'pages'</span>: <span class="string">'weekly'</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># Can be useful in development, but set to False when you're ready to publish</span></div><div class="line">RELATIVE_URLS = <span class="keyword">False</span></div></pre></td></tr></table></figure>
</li>
<li><p>配置 publishconf.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*- #</span></div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</div><div class="line"></div><div class="line"><span class="comment"># This file is only used if you use `make publish` or</span></div><div class="line"><span class="comment"># explicitly specify it as your config file.</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line">sys.path.append(os.curdir)</div><div class="line"><span class="keyword">from</span> pelicanconf <span class="keyword">import</span> *</div><div class="line"></div><div class="line">SITEURL = <span class="string">'http://Cokernut.github.io'</span></div><div class="line">RELATIVE_URLS = <span class="keyword">False</span></div><div class="line"></div><div class="line">FEED_ALL_ATOM = <span class="string">'feeds/all.atom.xml'</span></div><div class="line">CATEGORY_FEED_ATOM = <span class="string">'feeds/%s.atom.xml'</span></div><div class="line"></div><div class="line">DELETE_OUTPUT_DIRECTORY = <span class="keyword">True</span></div><div class="line"></div><div class="line"><span class="comment"># Following items are often useful when publishing</span></div><div class="line"></div><div class="line">DISQUS_SITENAME = <span class="string">u"Cokernut"</span></div><div class="line"><span class="comment">#GOOGLE_ANALYTICS = ""</span></div></pre></td></tr></table></figure>
</li>
<li><p>撰写第一篇文章</p>
</li>
</ol>
<blockquote>
<p>cd content</p>
<p>mkdir articles files images pages</p>
<p>vim articles/hello.md<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Title: Hello</div><div class="line">Date: 2014-09-24 02:06</div><div class="line">Category: Uncategorized</div><div class="line">Tags: Pelican, Markdown</div><div class="line">Slug: hello</div><div class="line">Author: Cokernut</div><div class="line">Summary: Hello Pelican, Markdown and GitHub Pages.</div><div class="line">Status: draft</div><div class="line"></div><div class="line"><span class="section">## 说明</span></div><div class="line">第5行：Slug是文档的唯一标识，生成html时，会直接使用这个值当html的文件名。</div><div class="line">所以，不同博客文章这个值需要保证唯一性，否则生成html时会报错。</div><div class="line">第8行：这个表示本文是草稿。比如我们一篇博客经常不是一次性写完的，</div><div class="line">写了一半暂不想让读者看到，或者写完想让别人帮忙审查一下，就可以加这一行标识。</div><div class="line">这样Pelican在处理时，这篇文章也会生成html，但不会放在博客的主页及分类索引里，</div><div class="line">这样普通的读者一般看不到这个文章。有这个标识的文章生成时放在 output/drafts 目录下，</div><div class="line">你就可以通过分享url的方式让你的co-worker帮你review你的文章。</div><div class="line">我们可以在 content 目录下任意建子目录来组织管理博客文章。</div><div class="line">由于我们在设置文件里指定这个值 USE<span class="emphasis">_FOLDER_</span>AS_CATEGORY = True ，这样这些目录名称就自动变成博文分类的目录了。</div><div class="line"></div><div class="line">Hello Pelican, Markdown and GitHub Pages.</div></pre></td></tr></table></figure></p>
</blockquote>
<ol>
<li>生成robots.txt与favicon.ico vim files/robots.txt</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Sitemap: http://Cokernut.github.io/sitemap.xml</div><div class="line">scp heylinux.com:/webserver/blog/rainbow/favicon.ico .</div></pre></td></tr></table></figure>
<ol>
<li>配置Disqus</li>
</ol>
<p>在 Disqus 上注册一个用户并生成一个站点Cokernut.disqus.com；</p>
<p>设置Cokernut.disqus.com站点使其允许域名Cokernut.github.io；</p>
<p>设置以上配置文件为DISQUS_SITENAME = u”Cokernut”，Cokernut 为站点ID</p>
<ol>
<li>创建GitHub Pages</li>
</ol>
<p>直接创建一个新的repo，但是其名称必须与ID相同，并加上github.io或github.com后缀。</p>
<p>就我而言，就必须创建一个repo名为 Cokernut.github.io</p>
<ol>
<li><p>创建好GitHub Pages之后，生成Blog静态HTML文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line"></div><div class="line">cd pelican</div><div class="line"></div><div class="line">pelican ./content -o ./output -s ./pelicanconf.py 或者 make html </div><div class="line"></div><div class="line">pelican /home/dong/pelican/content -o /home/dong/pelican/output -s /home/dong/pelican/pelicanconf.py</div><div class="line">WARNING: AUTHOR_SAVE_AS is set to False</div><div class="line">Done: Processed 1 article(s), 0 draft(s) and 0 page(s) in 0.23 seconds.</div></pre></td></tr></table></figure>
</li>
<li><p>进入output目录，将生成好的静态HTML文件上传到GitHub Pages站点Cokernut.github.io中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cd output</div><div class="line"></div><div class="line">git init</div><div class="line"></div><div class="line">git remote add origin https://github.com/Cokernut/Cokernut.github.io.git</div><div class="line"></div><div class="line">git add -A</div><div class="line"></div><div class="line">git commit -m &quot;Update Blog&quot;</div><div class="line"></div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
</li>
<li><p>等待15分钟左右，访问 Cokernut.github.io 即可看到生成的网站效果</p>
</li>
<li><p>注意</p>
</li>
</ol>
<p>由于我设置了在重新生成HTML时默认不删除output目录，因此每次更新Blog时都需要手动执行’rm -rf output/*’。</p>
<p>这样做的目的，是为了避免删除output/.git目录，方面在生成之后立刻提交到GitHub Pages。</p>
<p>当然在实际操作当中我是编写了alias和scripts来完成这一系列动作的。</p>
<p>预览博客文章</p>
<p>撰写文章的过程中，可以随时在浏览器里预览博客文章。方法是先在博客项目的根目录下执行下面命令来启动预览服务器：</p>
<p>make devserver<br>这条命令会自动使用 pelicanconf.py 的配置文件来生成html网页，同时在本地的8000端口上启动一个http服务器，供你预览文章。这样，直接打开浏览器，输入 localhost:8000 即可打开本地服务器上的你的博客主页。比如，撰写本文时，我就直接在gedit里码字，然后在浏览器里输入 <a href="http://localhost:8000/drafts/build-blog-system-by-pelican.html" target="_blank" rel="external">http://localhost:8000/drafts/build-blog-system-by-pelican.html</a> 来实时预览效果。需要注意的是，上述命令会在后台持续监听 content 目录下的内容，如果这个目录下的内容发生变化，会自动重新生成html页面。所以，在gedit里写完一段内容，切换到浏览器，直接刷新一下就可以看到最新的结果了。</p>
<p>当文章写完后，需要在博客项目根目录上运行 make stopserver 来停止这个预览服务以及数据监控功能。</p>
<p>文章在主页上没看到？</p>
<p>撰写完文章，需要发布时，需要把 Status: draft 这行元数据去掉。否则文章不会出现在博客主页。只会在drafts下看得到。</p>
<ol>
<li>相关文章、上下文导航</li>
</ol>
<blockquote>
<p>1.打开pelicanconf.py，定义插件目录和启用插件：  </p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#加载plugins</span></div><div class="line">PLUGIN_PATH = <span class="string">"plugins"</span></div><div class="line">PLUGINS = [<span class="string">"sitemap"</span>,<span class="string">"neighbors"</span>,<span class="string">"related_posts"</span>]</div><div class="line"><span class="comment">#sitemap</span></div><div class="line">SITEMAP = &#123;</div><div class="line">    <span class="string">'format'</span>: <span class="string">'xml'</span>,</div><div class="line">    <span class="string">'priorities'</span>: &#123;</div><div class="line">        <span class="string">'articles'</span>: <span class="number">0.7</span>,</div><div class="line">        <span class="string">'indexes'</span>: <span class="number">0.8</span>,</div><div class="line">        <span class="string">'pages'</span>: <span class="number">0.5</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'changefreqs'</span>: &#123;</div><div class="line">        <span class="string">'articles'</span>: <span class="string">'monthly'</span>,</div><div class="line">        <span class="string">'indexes'</span>: <span class="string">'daily'</span>,</div><div class="line">        <span class="string">'pages'</span>: <span class="string">'monthly'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">#相关文章</span></div><div class="line">RELATED_POSTS_MAX = <span class="number">10</span></div></pre></td></tr></table></figure>
<blockquote>
<p>2.邻居导航，在主题模版中调用如下代码，可根据自己的情况修改：  </p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">   &#123;% if article.prev_article %&#125;</div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"prev"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; SITEURL &#125;&#125;/&#123;&#123; article.prev_article.url&#125;&#125;"</span>&gt;</span>← Previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     &#123;% else %&#125;</div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"prev"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>← Previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     &#123;% endif %&#125;</div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/archives.html"</span>&gt;</span>Archive<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     &#123;% if article.next_article %&#125;</div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; SITEURL &#125;&#125;/&#123;&#123; article.next_article.url&#125;&#125;"</span>&gt;</span>Next →<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     &#123;% else %&#125;</div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>Next →<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     &#123;% endif %&#125;</div><div class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>3.相关文章：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;% if article.related_posts %&#125;</div><div class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Related Articles<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    &#123;% for related_post in article.related_posts %&#125;</div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; SITEURL &#125;&#125;/&#123;&#123; related_post.url &#125;&#125;"</span>&gt;</span>&#123;&#123; related_post.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    &#123;% endfor %&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Pelican+GitHub Pages搭建静态博客&lt;br&gt;
    
    </summary>
    
      <category term="GitHub" scheme="http://cokernut.top/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="http://cokernut.top/tags/GitHub/"/>
    
  </entry>
  
</feed>
